name: Release ðŸ”–

on:
  workflow_call:

# Usually we'd restrict concurrency here, but this causes a deadlock with
# called workflows. See https://github.com/latticexyz/mud/pull/2784

env:
  NODE_OPTIONS: "--max-old-space-size=4096"

jobs:
  release:
    name: Release
    if: github.repository == 'latticexyz/mud'
    runs-on: ubuntu-latest
    # Permissions necessary for Changesets to push a new branch and open PRs
    # (for automated Version Packages PRs), and request the JWT for provenance.
    # More info: https://docs.github.com/en/actions/deployment/security-hardening-your-deployments/about-security-hardening-with-openid-connect#adding-permissions-settings
    permissions:
      contents: write
      pull-requests: write
      id-token: write
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Check for pre.json file existence
        id: check_files
        uses: andstor/file-existence-action@v2.0.0
        with:
          files: ".changeset/pre.json"

      - name: Setup
        if: steps.check_files.outputs.files_exists == 'false'
        uses: ./.github/actions/setup

      - name: Set deployment token
        if: steps.check_files.outputs.files_exists == 'false'
        run: npm config set '//registry.npmjs.org/:_authToken' "${NPM_TOKEN}"
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Get next release version
        if: steps.check_files.outputs.files_exists == 'false'
        id: next-version
        run: |
          pnpm changeset status --output=release.json
          echo "version=$(cat release.json | jq -r '.releases[0].newVersion')" >> "$GITHUB_OUTPUT"
          rm release.json

      - name: Create version PR or publish ðŸš€
        if: steps.check_files.outputs.files_exists == 'false'
        uses: changesets/action@v1
        with:
          title: "chore: release v${{steps.next-version.outputs.version}}"
          commit: "chore: release v${{steps.next-version.outputs.version}}"
          publish: pnpm release:publish
          version: pnpm release:version
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
