import { decodeData } from "./decodeData";
import { decodeSchema } from "./decodeSchema";

describe("decodeData", () => {
  describe("dynamic data layout", () => {
    it("should decode", () => {
      const schema = decodeSchema(
        "0x00000002c5c40000000000000000000000000000000000000000000000000000002001005f000000000000000000000000000000000000000000000000000000"
      );
      const data = decodeData(
        schema.valueSchema,
        "0x0000000000010600000000060000000100000000000000000000000000000000736368656d610000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000080000000000000000000000000000000000000000000000000000000000000000b76616c7565536368656d6100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000096b6579536368656d610000000000000000000000000000000000000000000000"
      );
      expect(data).toEqual({
        0: "schema",
        1: "0x0000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000080000000000000000000000000000000000000000000000000000000000000000b76616c7565536368656d6100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000096b6579536368656d610000000000000000000000000000000000000000000000",
      });
    });
  });
});
