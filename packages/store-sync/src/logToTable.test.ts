import { describe, it, expect } from "vitest";
import { logToTable } from "./logToTable";

describe("logToTable", () => {
  it("should convert a table registration log to table object", async () => {
    expect(
      logToTable({
        address: "0x3Aa5ebB10DC797CAC828524e59A333d0A371443c",
        eventName: "Store_SetRecord",
        args: {
          tableId: "0x74626d756473746f72650000000000005461626c657300000000000000000000",
          keyTuple: ["0x74626d756473746f72650000000000005461626c657300000000000000000000"],
          staticData:
            // eslint-disable-next-line max-len
            "0x0060030220202000000000000000000000000000000000000000000000000000002001005f000000000000000000000000000000000000000000000000000000006003025f5f5fc4c40000000000000000000000000000000000000000000000",
          encodedLengths: "0x000000000000000000000000000000000000022000000000a0000000000002c0",
          dynamicData:
            // eslint-disable-next-line max-len
            "0x00000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000077461626c654964000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000000500000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000000e00000000000000000000000000000000000000000000000000000000000000120000000000000000000000000000000000000000000000000000000000000016000000000000000000000000000000000000000000000000000000000000001a0000000000000000000000000000000000000000000000000000000000000000b6669656c644c61796f757400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000096b6579536368656d610000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000b76616c7565536368656d610000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000012616269456e636f6465644b65794e616d657300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000014616269456e636f6465644669656c644e616d6573000000000000000000000000",
        },
      })
    ).toMatchInlineSnapshot(`
      {
        "address": "0x3Aa5ebB10DC797CAC828524e59A333d0A371443c",
        "keySchema": {
          "tableId": "bytes32",
        },
        "name": "Tables",
        "namespace": "mudstore",
        "tableId": "0x74626d756473746f72650000000000005461626c657300000000000000000000",
        "valueSchema": {
          "abiEncodedFieldNames": "bytes",
          "abiEncodedKeyNames": "bytes",
          "fieldLayout": "bytes32",
          "keySchema": "bytes32",
          "valueSchema": "bytes32",
        },
      }
    `);
  });
});
