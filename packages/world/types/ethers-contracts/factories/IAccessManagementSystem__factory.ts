/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  IAccessManagementSystem,
  IAccessManagementSystemInterface,
} from "../IAccessManagementSystem";

const _abi = [
  {
    inputs: [
      {
        internalType: "bytes16",
        name: "namespace",
        type: "bytes16",
      },
      {
        internalType: "bytes16",
        name: "name",
        type: "bytes16",
      },
      {
        internalType: "address",
        name: "grantee",
        type: "address",
      },
    ],
    name: "grantAccess",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes16",
        name: "namespace",
        type: "bytes16",
      },
      {
        internalType: "bytes16",
        name: "name",
        type: "bytes16",
      },
      {
        internalType: "address",
        name: "grantee",
        type: "address",
      },
    ],
    name: "revokeAccess",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class IAccessManagementSystem__factory {
  static readonly abi = _abi;
  static createInterface(): IAccessManagementSystemInterface {
    return new utils.Interface(_abi) as IAccessManagementSystemInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IAccessManagementSystem {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as IAccessManagementSystem;
  }
}
