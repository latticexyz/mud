/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  IWorldCall,
  IWorldCallInterface,
} from "../../IWorldKernel.sol/IWorldCall";

const _abi = [
  {
    inputs: [
      {
        internalType: "bytes16",
        name: "namespace",
        type: "bytes16",
      },
      {
        internalType: "bytes16",
        name: "name",
        type: "bytes16",
      },
      {
        internalType: "bytes",
        name: "funcSelectorAndArgs",
        type: "bytes",
      },
    ],
    name: "call",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
] as const;

export class IWorldCall__factory {
  static readonly abi = _abi;
  static createInterface(): IWorldCallInterface {
    return new utils.Interface(_abi) as IWorldCallInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IWorldCall {
    return new Contract(address, _abi, signerOrProvider) as IWorldCall;
  }
}
