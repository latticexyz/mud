/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  StoreRegistrationSystem,
  StoreRegistrationSystemInterface,
} from "../StoreRegistrationSystem";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "length",
        type: "uint256",
      },
    ],
    name: "SchemaLib_InvalidLength",
    type: "error",
  },
  {
    inputs: [],
    name: "SchemaLib_StaticTypeAfterDynamicType",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "tableId",
        type: "bytes32",
      },
      {
        internalType: "Schema",
        name: "valueSchema",
        type: "bytes32",
      },
      {
        internalType: "Schema",
        name: "keySchema",
        type: "bytes32",
      },
    ],
    name: "registerSchema",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "tableId",
        type: "bytes32",
      },
      {
        internalType: "contract IStoreHook",
        name: "hook",
        type: "address",
      },
    ],
    name: "registerStoreHook",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "tableId",
        type: "bytes32",
      },
      {
        internalType: "string",
        name: "tableName",
        type: "string",
      },
      {
        internalType: "string[]",
        name: "fieldNames",
        type: "string[]",
      },
    ],
    name: "setMetadata",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50611388806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80636e81fd7114610046578063d59336861461005b578063fe86a89f1461006e575b600080fd5b610059610054366004610d70565b610081565b005b610059610069366004610db9565b610198565b61005961007c366004610de5565b61023e565b600061009c6f636f72652e73000000000000000000006102b6565b5090506101926100aa61037b565b827f8ae710e900000000000000000000000000000000000000000000000000000000866100d78860801b90565b6040517fffffffffffffffffffffffffffffffff0000000000000000000000000000000092831660248201529116604482015273ffffffffffffffffffffffffffffffffffffffff871660648201526084015b60408051601f198184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff0000000000000000000000000000000000000000000000000000000090931692909217909152600160006103ad565b50505050565b60006101b36f636f72652e73000000000000000000006102b6565b5090506102376101c161037b565b827f31b99d8900000000000000000000000000000000000000000000000000000000876101ee8960801b90565b6040517fffffffffffffffffffffffffffffffff00000000000000000000000000000000928316602482015291166044820152606481018890526084810187905260a40161012a565b5050505050565b60006102596f636f72652e73000000000000000000006102b6565b5090506102ad61026761037b565b827f096fcaa900000000000000000000000000000000000000000000000000000000896102948b60801b90565b8a8a8a8a60405160240161012a96959493929190610ee5565b50505050505050565b604080516001808252818301909252600091829182916020808301908036833701905050905083816000815181106102f0576102f0610ffc565b6020908102919091018101919091526040805160009281018390527f53797374656d7300000000000000000000000000000000000000000000000000603082015261035c910160405160208183030381529060405261034e90611012565b836103576104d7565b610594565b6020810151603482015191925060601c9060f81c935093505050915091565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffec36013560601c806103aa5750335b90565b6060600084876040516020016103c4929190611065565b60405160208183030381529060405290506000808561044b578773ffffffffffffffffffffffffffffffffffffffff16858460405161040391906110af565b60006040518083038185875af1925050503d8060008114610440576040519150601f19603f3d011682016040523d82523d6000602084013e610445565b606091505b506104b2565b8773ffffffffffffffffffffffffffffffffffffffff168360405161047091906110af565b600060405180830381855af49150503d80600081146104ab576040519150601f19603f3d011682016040523d82523d6000602084013e6104b0565b606091505b505b9150915081156104c65792506104ce915050565b805160208201fd5b95945050505050565b6040805160028082526060820183526000928392919060208301908036833701905050905060618160008151811061051157610511610ffc565b602002602001019060c581111561052a5761052a6110cb565b908160c581111561053d5761053d6110cb565b8152505060608160018151811061055657610556610ffc565b602002602001019060c581111561056f5761056f6110cb565b908160c5811115610582576105826110cb565b90525061058e81610641565b91505090565b606061059e6108d6565b156105b5576105ae848484610954565b905061063a565b6040517f419b58fd000000000000000000000000000000000000000000000000000000008152339063419b58fd906105f59087908790879060040161111c565b600060405180830381865afa158015610612573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526105ae9190810190611145565b9392505050565b6000601c8251111561068d5781516040517f5318beb900000000000000000000000000000000000000000000000000000000815260040161068491815260200190565b60405180910390fd5b60008060008060005b86518110156107b95760006106d48883815181106106b6576106b6610ffc565b602002602001015160c58111156106cf576106cf6110cb565b610ab2565b905061ffff81161561072a578215610718576040517ff1e56be400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b83610722816111fd565b94505061072f565b600192505b610739818661121c565b94506107ae8661074a846004611242565b8a858151811061075c5761075c610ffc565b602002602001015160c5811115610775576107756110cb565b60f81b6008820281811c7fff0000000000000000000000000000000000000000000000000000000000000090911c198416179392505050565b955050600101610696565b5060008287516107c9919061125a565b905060058160ff16111561080e576040517f5318beb900000000000000000000000000000000000000000000000000000000815260ff82166004820152602401610684565b7dffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff851660f085901b1794507fffff00ffffffffffffffffffffffffffffffffffffffffffffffffffffffffff85167dff000000000000000000000000000000000000000000000000000000000060e885901b161794507fffffff00ffffffffffffffffffffffffffffffffffffffffffffffffffffffff85167cff0000000000000000000000000000000000000000000000000000000060e083901b16175b979650505050505050565b6000303b8082036108e957600191505090565b3073ffffffffffffffffffffffffffffffffffffffff1663a5c2f0076040518163ffffffff1660e01b815260040160006040518083038186803b15801561092f57600080fd5b505afa925050508015610940575060015b61094c57600091505090565b600191505090565b606060006109628360f01c90565b905080600060ff60e086901c1680156109b55761097f8888610b63565b9150600061098d8360c81c90565b11156109b55761099d8260c81c90565b6109a8906020611242565b6109b29084611242565b92505b60008367ffffffffffffffff8111156109d0576109d0610fe6565b6040519080825280601f01601f1916602001820160405280156109fa576020820181803683370190505b50905060208101610a0d8a8a8884610b82565b610a178460c81c90565b600003610a2b5750945061063a9350505050565b610a358682611242565b8481529050610a45602082611242565b905060005b838160ff161015610aa3576000610a628c8c84610ba3565b90506000610a738760ff8516610bfc565b9050610a828282600087610c2e565b610a8c8185611242565b935050508080610a9b906111fd565b915050610a4a565b50909998505050505050505050565b6000808260c5811115610ac757610ac76110cb565b60ff1690506020811015610ae05761063a816001611242565b6040811015610b00576020610af6826001611242565b61063a919061127d565b6060811015610b16576040610af6826001611242565b60608360c5811115610b2a57610b2a6110cb565b03610b385750600192915050565b60618360c5811115610b4c57610b4c6110cb565b03610b5a5750601492915050565b50600092915050565b600080610b708484610ce3565b9050610b7a815490565b949350505050565b8115610192576000610b948585610d39565b90506102378184600085610c2e565b60007f86425bff6b57326c7859e89024fe4f238ca327a1ae4a230180dd2f0e88aaa7d9848484604051602001610bdc9493929190611294565b60408051601f198184030181529190528051602090910120949350505050565b600080610c0a8360056112c7565b610c15906007611242565b9050610c2384826008021b90565b60d81c949350505050565b602082048401935060208281610c4657610c466112e6565b0691508115610c975760208290036000600019600883021c1990508554600885021b811984511682821617845250818511610c82575050610192565b610c8d600187611242565b9550509283900392015b60208310610cbf5783548152610cae600185611242565b9350601f1990920191602001610c97565b8215610192576000600019600885021c198251865482169119161782525050505050565b60007f86425bff6b57326c7859e89024fe4f238ca327a1ae4a230180dd2f0e88aaa7d98383604051602001610d1a939291906112fc565b60408051601f1981840301815291905280516020909101209392505050565b60007f86425bff6b57326c7859e89024fe4f238ca327a1ae4a230180dd2f0e88aaa7d98383604051602001610d1a9392919061135c565b60008060408385031215610d8357600080fd5b82359150602083013573ffffffffffffffffffffffffffffffffffffffff81168114610dae57600080fd5b809150509250929050565b600080600060608486031215610dce57600080fd5b505081359360208301359350604090920135919050565b600080600080600060608688031215610dfd57600080fd5b85359450602086013567ffffffffffffffff80821115610e1c57600080fd5b818801915088601f830112610e3057600080fd5b813581811115610e3f57600080fd5b896020828501011115610e5157600080fd5b602083019650809550506040880135915080821115610e6f57600080fd5b818801915088601f830112610e8357600080fd5b813581811115610e9257600080fd5b8960208260051b8501011115610ea757600080fd5b9699959850939650602001949392505050565b818352818160208501375060006020828401015260006020601f19601f840116840101905092915050565b60007fffffffffffffffffffffffffffffffff00000000000000000000000000000000808916835260208189168185015260806040850152610f2b60808501888a610eba565b84810360608601528581529150808201600586901b830182018760005b88811015610fd457601f1986840301845281357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe18b3603018112610f8b57600080fd5b8a01803567ffffffffffffffff811115610fa457600080fd5b8036038c1315610fb357600080fd5b610fc08582898501610eba565b958701959450505090840190600101610f48565b50909c9b505050505050505050505050565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b80516020808301519190811015611033576000198160200360031b1b821691505b50919050565b60005b8381101561105457818101518382015260200161103c565b838111156101925750506000910152565b60008351611077818460208801611039565b60609390931b7fffffffffffffffffffffffffffffffffffffffff000000000000000000000000169190920190815260140192915050565b600082516110c1818460208701611039565b9190910192915050565b634e487b7160e01b600052602160045260246000fd5b600081518084526020808501945080840160005b83811015611111578151875295820195908201906001016110f5565b509495945050505050565b83815260606020820152600061113560608301856110e1565b9050826040830152949350505050565b60006020828403121561115757600080fd5b815167ffffffffffffffff8082111561116f57600080fd5b818401915084601f83011261118357600080fd5b81518181111561119557611195610fe6565b604051601f8201601f19908116603f011681019083821181831017156111bd576111bd610fe6565b816040528281528760208487010111156111d657600080fd5b6108cb836020830160208801611039565b634e487b7160e01b600052601160045260246000fd5b600060ff821660ff8103611213576112136111e7565b60010192915050565b600061ffff808316818516808303821115611239576112396111e7565b01949350505050565b60008219821115611255576112556111e7565b500190565b600060ff821660ff841680821015611274576112746111e7565b90039392505050565b60008282101561128f5761128f6111e7565b500390565b8481528360208201526080604082015260006112b360808301856110e1565b905060ff8316606083015295945050505050565b60008160001904831182151516156112e1576112e16111e7565b500290565b634e487b7160e01b600052601260045260246000fd5b83815282602082015260806040820152600061131b60808301846110e1565b8281036060840152600681527f6c656e6774680000000000000000000000000000000000000000000000000000602082015260408101915050949350505050565b8381528260208201526060604082015260006104ce60608301846110e156fea164736f6c634300080d000a";

type StoreRegistrationSystemConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: StoreRegistrationSystemConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class StoreRegistrationSystem__factory extends ContractFactory {
  constructor(...args: StoreRegistrationSystemConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<StoreRegistrationSystem> {
    return super.deploy(overrides || {}) as Promise<StoreRegistrationSystem>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): StoreRegistrationSystem {
    return super.attach(address) as StoreRegistrationSystem;
  }
  override connect(signer: Signer): StoreRegistrationSystem__factory {
    return super.connect(signer) as StoreRegistrationSystem__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): StoreRegistrationSystemInterface {
    return new utils.Interface(_abi) as StoreRegistrationSystemInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): StoreRegistrationSystem {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as StoreRegistrationSystem;
  }
}
