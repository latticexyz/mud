[
  {
    "source": "test/KeysWithValueModule.t.sol",
    "name": "install keys with value module",
    "functionCall": "world.installRootModule(keysWithValueModule, abi.encode(sourceTableId))",
    "gasUsed": 609138
  },
  {
    "source": "test/KeysWithValueModule.t.sol",
    "name": "Get list of keys with a given value",
    "functionCall": "bytes32[] memory keysWithValue = getKeysWithValue(world, sourceTableId, abi.encode(value1))",
    "gasUsed": 7658
  },
  {
    "source": "test/KeysWithValueModule.t.sol",
    "name": "compute the target table selector",
    "functionCall": "bytes32 targetTableSelector = getTargetTableSelector(MODULE_NAMESPACE, sourceTableId)",
    "gasUsed": 2240
  },
  {
    "source": "test/KeysWithValueModule.t.sol",
    "name": "install keys with value module",
    "functionCall": "world.installRootModule(keysWithValueModule, abi.encode(sourceTableId))",
    "gasUsed": 609138
  },
  {
    "source": "test/KeysWithValueModule.t.sol",
    "name": "set a record on a table with KeysWithValueModule installed",
    "functionCall": "world.setRecord(namespace, sourceName, keyTuple1, abi.encodePacked(value))",
    "gasUsed": 169231
  },
  {
    "source": "test/KeysWithValueModule.t.sol",
    "name": "install keys with value module",
    "functionCall": "world.installRootModule(keysWithValueModule, abi.encode(sourceTableId))",
    "gasUsed": 609138
  },
  {
    "source": "test/KeysWithValueModule.t.sol",
    "name": "change a record on a table with KeysWithValueModule installed",
    "functionCall": "world.setRecord(namespace, sourceName, keyTuple1, abi.encodePacked(value2))",
    "gasUsed": 135228
  },
  {
    "source": "test/KeysWithValueModule.t.sol",
    "name": "delete a record on a table with KeysWithValueModule installed",
    "functionCall": "world.deleteRecord(namespace, sourceName, keyTuple1)",
    "gasUsed": 57896
  },
  {
    "source": "test/KeysWithValueModule.t.sol",
    "name": "install keys with value module",
    "functionCall": "world.installRootModule(keysWithValueModule, abi.encode(sourceTableId))",
    "gasUsed": 609138
  },
  {
    "source": "test/KeysWithValueModule.t.sol",
    "name": "set a field on a table with KeysWithValueModule installed",
    "functionCall": "world.setField(namespace, sourceName, keyTuple1, 0, abi.encodePacked(value1))",
    "gasUsed": 177268
  },
  {
    "source": "test/KeysWithValueModule.t.sol",
    "name": "change a field on a table with KeysWithValueModule installed",
    "functionCall": "world.setField(namespace, sourceName, keyTuple1, 0, abi.encodePacked(value2))",
    "gasUsed": 141614
  },
  {
    "source": "test/UniqueEntityModule.t.sol",
    "name": "install unique entity module",
    "functionCall": "world.installModule(uniqueEntityModule, new bytes(0))",
    "gasUsed": 791018
  },
  {
    "source": "test/UniqueEntityModule.t.sol",
    "name": "get a unique entity nonce (non-root module)",
    "functionCall": "uint256 uniqueEntity = uint256(getUniqueEntity(world))",
    "gasUsed": 65618
  },
  {
    "source": "test/UniqueEntityModule.t.sol",
    "name": "installRoot unique entity module",
    "functionCall": "world.installRootModule(uniqueEntityModule, new bytes(0))",
    "gasUsed": 766819
  },
  {
    "source": "test/UniqueEntityModule.t.sol",
    "name": "get a unique entity nonce (root module)",
    "functionCall": "uint256 uniqueEntity = uint256(getUniqueEntity(world))",
    "gasUsed": 65618
  },
  {
    "source": "test/World.t.sol",
    "name": "Delete record",
    "functionCall": "world.deleteRecord(namespace, name, singletonKey)",
    "gasUsed": 16147
  },
  {
    "source": "test/World.t.sol",
    "name": "Push data to the table",
    "functionCall": "world.pushToField(namespace, name, keyTuple, 0, encodedData)",
    "gasUsed": 96534
  },
  {
    "source": "test/World.t.sol",
    "name": "Register a fallback system",
    "functionCall": "bytes4 funcSelector1 = world.registerFunctionSelector(namespace, name, \"\", \"\")",
    "gasUsed": 81175
  },
  {
    "source": "test/World.t.sol",
    "name": "Register a root fallback system",
    "functionCall": "bytes4 funcSelector2 = world.registerRootFunctionSelector(namespace, name, worldFunc, 0)",
    "gasUsed": 72404
  },
  {
    "source": "test/World.t.sol",
    "name": "Register a function selector",
    "functionCall": "bytes4 functionSelector = world.registerFunctionSelector(namespace, name, \"msgSender\", \"()\")",
    "gasUsed": 101772
  },
  {
    "source": "test/World.t.sol",
    "name": "Register a new namespace",
    "functionCall": "world.registerNamespace(\"test\")",
    "gasUsed": 151950
  },
  {
    "source": "test/World.t.sol",
    "name": "Register a root function selector",
    "functionCall": "bytes4 functionSelector = world.registerRootFunctionSelector(namespace, name, worldFunc, sysFunc)",
    "gasUsed": 88310
  },
  {
    "source": "test/World.t.sol",
    "name": "Register a new table in the namespace",
    "functionCall": "bytes32 tableSelector = world.registerTable(namespace, table, schema, defaultKeySchema)",
    "gasUsed": 252654
  },
  {
    "source": "test/World.t.sol",
    "name": "Write data to a table field",
    "functionCall": "world.setField(namespace, name, singletonKey, 0, abi.encodePacked(true))",
    "gasUsed": 44781
  },
  {
    "source": "test/World.t.sol",
    "name": "Set metadata",
    "functionCall": "world.setMetadata(namespace, name, tableName, fieldNames)",
    "gasUsed": 277557
  },
  {
    "source": "test/World.t.sol",
    "name": "Write data to the table",
    "functionCall": "Bool.set(world, tableId, true)",
    "gasUsed": 42664
  }
]
