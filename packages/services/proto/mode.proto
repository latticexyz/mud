syntax = "proto3";
package mode;

option go_package = "protobuf/go/mode";

//////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                      //
// Messages for standardized table format that MODE uses to send over QueryLayer results to the client. //
//                                                                                                      //
//////////////////////////////////////////////////////////////////////////////////////////////////////////

// A Row is just a list of raw bytes.
message Row {
    repeated bytes values = 2;
}

// TableData contains a representation of a table.
message TableData {
    repeated string cols = 1;
    repeated Row rows = 2;
    repeated string types = 3; 
}

///////////////////////////////////////////////////////////////////////
//                                                                   //
// Messages that MODE uses to send over responses on the QueryLayer. //
//                                                                   //
///////////////////////////////////////////////////////////////////////

message QueryLayerResponse {
    map<string, TableData> tables = 1;
}

message QueryLayerStateResponse {
    map<string, TableData> chainTables = 1;
    map<string, TableData> worldTables = 2;
}

message QueryLayerStateStreamResponse {
   QueryLayerStateResponse inserted = 1;
   QueryLayerStateResponse updated = 2;
   QueryLayerStateResponse deleted = 3;
}

///////////////////////////////////////////////////////////////////////////////////////////
//                                                                                       //
// Namespaces are used by MODE to separate data by chain (network) ID and world address. //
//                                                                                       //
///////////////////////////////////////////////////////////////////////////////////////////

message Namespace {
    string chainId = 1;
    string worldAddress = 2;
}

//////////////////////////////////////////////////////////////////
//                                                              //
// Messages for various requests that MODE QueryLayer supports. //
//                                                              //
//////////////////////////////////////////////////////////////////

message StateRequest {
    // Namespace.
    Namespace namespace = 1;
    
    // Selection of world and chain tables. If left empty, all tables
    // are included.
    repeated string worldTables = 2;
    repeated string chainTables = 3;
}

message PartialStateRequest {
    // Namespace.
    Namespace namespace = 1;

    // Table.
    string table = 2;

    // Filters.
    repeated Filter filter = 3;

    // Projections.
    repeated ProjectedField project = 4;
}

message FindRequest {
    string from = 1;
    repeated Filter filter = 2;
    repeated ProjectedField project = 3;

    // Namespace.
    Namespace namespace = 4;

    // Options.
    FindRequestOptions options = 5; 
}

message FindAllRequest {
    repeated string tables = 1;

    // Namespace.
    Namespace namespace = 2;

    // Options.
    FindRequestOptions options = 3;
}

message JoinRequest {
    FieldPair on = 1;
    repeated FindRequest children = 2;

    // Namespace.
    Namespace namespace = 3;
}

message DeleteRequest {
    string from = 1;
    repeated Filter filter = 2; 
}

message UpdateRequest {
    string target = 1;
    repeated Filter filter = 2;
    map<string, string> row = 3;
}

message InsertRequest {
    string into = 1;
    map<string, string> row = 3; 
}

message CreateRequest {
    string name = 1;
}

/////////////////////////////////////////////////////////////////////////////////////
//                                                                                 //
// Messages for various request options on requests that MODE QueryLayer supports. //
//                                                                                 //
/////////////////////////////////////////////////////////////////////////////////////

message FindRequestOptions {
   bool compressed = 1;  
   bool group = 2;
   bool negate = 3;
}

//////////////////////////////////////////////////////////////
//                                                          //
// Messages for basic primitives that MODE QueryLayer uses. //
//                                                          //
//////////////////////////////////////////////////////////////

message Field {
    string table_name = 1;
    string table_field = 2;
}

message FieldPair {
    Field field1 = 1;
    Field field2 = 2;
}

message ProjectedField {
    Field field = 1;
    optional string rename = 2;
}

message Filter {
    Field field = 1;
    string operator = 2;
    string value = 3;
    string function = 4;
}

//////////////////////////
//                      //
// Service definitions. //
//                      //
//////////////////////////

service QueryLayer {
    // Get entire state.
    rpc GetState(StateRequest) returns (QueryLayerStateResponse) {}

    // Stream entire state.
    rpc StreamState(StateRequest) returns (stream QueryLayerStateStreamResponse) {}

    // Get state for a single table.
    rpc GetPartialState(PartialStateRequest) returns (QueryLayerStateResponse) {}

    // Stream state for a single table.
    rpc StreamPartialState(PartialStateRequest) returns (stream QueryLayerStateStreamResponse) {}
}
