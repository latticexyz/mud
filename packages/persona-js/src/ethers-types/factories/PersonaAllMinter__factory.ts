/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { PersonaAllMinter, PersonaAllMinterInterface } from "../PersonaAllMinter";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "minterAddress",
        type: "address",
      },
    ],
    name: "mintPersona",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "personaContract",
    outputs: [
      {
        internalType: "contract PersonaLike",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "personaContractAddress",
        type: "address",
      },
    ],
    name: "setPersona",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506101f4806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c8063d3c90b8b14610046578063dc9cb1281461009d578063e231a61a146100b0575b600080fd5b61009b610054366004610181565b600080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b005b61009b6100ab366004610181565b6100f9565b6000546100d09073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200160405180910390f35b6000546040517f6a62784200000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff838116600483015290911690636a62784290602401600060405180830381600087803b15801561016657600080fd5b505af115801561017a573d6000803e3d6000fd5b5050505050565b60006020828403121561019357600080fd5b813573ffffffffffffffffffffffffffffffffffffffff811681146101b757600080fd5b939250505056fea2646970667358221220dd09112517234634bb1cc1ae39f89b1bcd35de32ae8ead6d13912c32a4df4eb564736f6c634300080a0033";

type PersonaAllMinterConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (xs: PersonaAllMinterConstructorParams): xs is ConstructorParameters<typeof ContractFactory> =>
  xs.length > 1;

export class PersonaAllMinter__factory extends ContractFactory {
  constructor(...args: PersonaAllMinterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(overrides?: Overrides & { from?: PromiseOrValue<string> }): Promise<PersonaAllMinter> {
    return super.deploy(overrides || {}) as Promise<PersonaAllMinter>;
  }
  override getDeployTransaction(overrides?: Overrides & { from?: PromiseOrValue<string> }): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): PersonaAllMinter {
    return super.attach(address) as PersonaAllMinter;
  }
  override connect(signer: Signer): PersonaAllMinter__factory {
    return super.connect(signer) as PersonaAllMinter__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PersonaAllMinterInterface {
    return new utils.Interface(_abi) as PersonaAllMinterInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): PersonaAllMinter {
    return new Contract(address, _abi, signerOrProvider) as PersonaAllMinter;
  }
}
