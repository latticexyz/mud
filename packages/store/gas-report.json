[
  {
    "file": "test/Bytes.t.sol",
    "test": "testEquals",
    "name": "compare equal bytes",
    "gasUsed": 196
  },
  {
    "file": "test/Bytes.t.sol",
    "test": "testEqualsFalse",
    "name": "compare unequal bytes",
    "gasUsed": 196
  },
  {
    "file": "test/Bytes.t.sol",
    "test": "testSetBytes1",
    "name": "set bytes1 in bytes32",
    "gasUsed": 16
  },
  {
    "file": "test/Bytes.t.sol",
    "test": "testSetBytes2",
    "name": "set bytes2 in bytes32",
    "gasUsed": 16
  },
  {
    "file": "test/Bytes.t.sol",
    "test": "testSetBytes4",
    "name": "set bytes4 in bytes32",
    "gasUsed": 16
  },
  {
    "file": "test/Bytes.t.sol",
    "test": "testSetBytes4Memory",
    "name": "set bytes4 in bytes memory",
    "gasUsed": 37
  },
  {
    "file": "test/Bytes.t.sol",
    "test": "testSlice3",
    "name": "slice bytes3 with offset 1",
    "gasUsed": 68
  },
  {
    "file": "test/Bytes.t.sol",
    "test": "testSlice32",
    "name": "slice bytes32 with offset 10",
    "gasUsed": 68
  },
  {
    "file": "test/Bytes.t.sol",
    "test": "testToBytes32",
    "name": "create bytes32 from bytes memory with offset 0",
    "gasUsed": 25
  },
  {
    "file": "test/Bytes.t.sol",
    "test": "testToBytes32CrossWord",
    "name": "create bytes32 from bytes memory with offset 16",
    "gasUsed": 36
  },
  {
    "file": "test/Gas.t.sol",
    "test": "testCompareAbiEncodeVsCustom",
    "name": "abi encode",
    "gasUsed": 949
  },
  {
    "file": "test/Gas.t.sol",
    "test": "testCompareAbiEncodeVsCustom",
    "name": "abi decode",
    "gasUsed": 1738
  },
  {
    "file": "test/Gas.t.sol",
    "test": "testCompareAbiEncodeVsCustom",
    "name": "custom encode",
    "gasUsed": 3354
  },
  {
    "file": "test/Gas.t.sol",
    "test": "testCompareAbiEncodeVsCustom",
    "name": "custom decode",
    "gasUsed": 2915
  },
  {
    "file": "test/Gas.t.sol",
    "test": "testCompareAbiEncodeVsCustom",
    "name": "pass abi encoded bytes to external contract",
    "gasUsed": 6563
  },
  {
    "file": "test/Gas.t.sol",
    "test": "testCompareAbiEncodeVsCustom",
    "name": "pass custom encoded bytes to external contract",
    "gasUsed": 1457
  },
  {
    "file": "test/Gas.t.sol",
    "test": "testCompareStorageMUD",
    "name": "MUD storage write (cold, 1 word)",
    "gasUsed": 22401
  },
  {
    "file": "test/Gas.t.sol",
    "test": "testCompareStorageMUD",
    "name": "MUD storage write (cold, 1 word, partial)",
    "gasUsed": 22438
  },
  {
    "file": "test/Gas.t.sol",
    "test": "testCompareStorageMUD",
    "name": "MUD storage write (cold, 10 words)",
    "gasUsed": 200361
  },
  {
    "file": "test/Gas.t.sol",
    "test": "testCompareStorageMUD",
    "name": "MUD storage write (warm, 1 word)",
    "gasUsed": 401
  },
  {
    "file": "test/Gas.t.sol",
    "test": "testCompareStorageMUD",
    "name": "MUD storage write (warm, 1 word, partial)",
    "gasUsed": 538
  },
  {
    "file": "test/Gas.t.sol",
    "test": "testCompareStorageMUD",
    "name": "MUD storage write (warm, 10 words)",
    "gasUsed": 2361
  },
  {
    "file": "test/Gas.t.sol",
    "test": "testCompareStorageMUD",
    "name": "MUD storage load (warm, 1 word)",
    "gasUsed": 570
  },
  {
    "file": "test/Gas.t.sol",
    "test": "testCompareStorageMUD",
    "name": "MUD storage load (warm, 1 word, partial)",
    "gasUsed": 591
  },
  {
    "file": "test/Gas.t.sol",
    "test": "testCompareStorageMUD",
    "name": "MUD storage load (warm, 10 words)",
    "gasUsed": 2595
  },
  {
    "file": "test/Gas.t.sol",
    "test": "testCompareStorageSolidity",
    "name": "solidity storage write (cold, 1 word)",
    "gasUsed": 22107
  },
  {
    "file": "test/Gas.t.sol",
    "test": "testCompareStorageSolidity",
    "name": "solidity storage write (cold, 1 word, partial)",
    "gasUsed": 22136
  },
  {
    "file": "test/Gas.t.sol",
    "test": "testCompareStorageSolidity",
    "name": "solidity storage write (cold, 10 words)",
    "gasUsed": 199902
  },
  {
    "file": "test/Gas.t.sol",
    "test": "testCompareStorageSolidity",
    "name": "solidity storage write (warm, 1 word)",
    "gasUsed": 107
  },
  {
    "file": "test/Gas.t.sol",
    "test": "testCompareStorageSolidity",
    "name": "solidity storage write (warm, 1 word, partial)",
    "gasUsed": 236
  },
  {
    "file": "test/Gas.t.sol",
    "test": "testCompareStorageSolidity",
    "name": "solidity storage write (warm, 10 words)",
    "gasUsed": 1988
  },
  {
    "file": "test/Gas.t.sol",
    "test": "testCompareStorageSolidity",
    "name": "solidity storage load (warm, 1 word)",
    "gasUsed": 109
  },
  {
    "file": "test/Gas.t.sol",
    "test": "testCompareStorageSolidity",
    "name": "solidity storage load (warm, 1 word, partial)",
    "gasUsed": 126
  },
  {
    "file": "test/Gas.t.sol",
    "test": "testCompareStorageSolidity",
    "name": "solidity storage load (warm, 10 words)",
    "gasUsed": 1916
  },
  {
    "file": "test/KeyEncoding.t.sol",
    "test": "testRegisterAndGetSchema",
    "name": "register KeyEncoding schema",
    "gasUsed": 64679
  },
  {
    "file": "test/Mixed.t.sol",
    "test": "testCompareSolidity",
    "name": "store Mixed struct in storage (native solidity)",
    "gasUsed": 92038
  },
  {
    "file": "test/Mixed.t.sol",
    "test": "testRegisterAndGetSchema",
    "name": "register Mixed schema",
    "gasUsed": 61687
  },
  {
    "file": "test/Mixed.t.sol",
    "test": "testSetAndGet",
    "name": "set record in Mixed",
    "gasUsed": 110883
  },
  {
    "file": "test/Mixed.t.sol",
    "test": "testSetAndGet",
    "name": "get record from Mixed",
    "gasUsed": 12435
  },
  {
    "file": "test/PackedCounter.t.sol",
    "test": "testAtIndex",
    "name": "get value at index of PackedCounter",
    "gasUsed": 255
  },
  {
    "file": "test/PackedCounter.t.sol",
    "test": "testSetAtIndex",
    "name": "set value at index of PackedCounter",
    "gasUsed": 793
  },
  {
    "file": "test/PackedCounter.t.sol",
    "test": "testTotal",
    "name": "pack uint40 array into PackedCounter",
    "gasUsed": 2146
  },
  {
    "file": "test/PackedCounter.t.sol",
    "test": "testTotal",
    "name": "get total of PackedCounter",
    "gasUsed": 27
  },
  {
    "file": "test/Schema.t.sol",
    "test": "testEncodeDecodeSchema",
    "name": "encode schema with 6 entries [SchemaLib.encode]",
    "gasUsed": 5639
  },
  {
    "file": "test/Schema.t.sol",
    "test": "testEncodeDecodeSchema",
    "name": "get schema type at index",
    "gasUsed": 185
  },
  {
    "file": "test/Schema.t.sol",
    "test": "testGetNumDynamicFields",
    "name": "get number of dynamic fields from schema",
    "gasUsed": 74
  },
  {
    "file": "test/Schema.t.sol",
    "test": "testGetNumStaticFields",
    "name": "get number of static fields from schema",
    "gasUsed": 85
  },
  {
    "file": "test/Schema.t.sol",
    "test": "testGetStaticSchemaLength",
    "name": "get static data length from schema",
    "gasUsed": 33
  },
  {
    "file": "test/Schema.t.sol",
    "test": "testIsEmptyFalse",
    "name": "check if schema is empty (non-empty schema)",
    "gasUsed": 7
  },
  {
    "file": "test/Schema.t.sol",
    "test": "testIsEmptyTrue",
    "name": "check if schema is empty (empty schema)",
    "gasUsed": 7
  },
  {
    "file": "test/Schema.t.sol",
    "test": "testValidate",
    "name": "validate schema",
    "gasUsed": 16381
  },
  {
    "file": "test/Slice.t.sol",
    "test": "testFromBytes",
    "name": "make Slice from bytes",
    "gasUsed": 31
  },
  {
    "file": "test/Slice.t.sol",
    "test": "testFromBytes",
    "name": "get Slice length",
    "gasUsed": 10
  },
  {
    "file": "test/Slice.t.sol",
    "test": "testFromBytes",
    "name": "get Slice pointer",
    "gasUsed": 33
  },
  {
    "file": "test/Slice.t.sol",
    "test": "testSubslice",
    "name": "subslice bytes (no copy) [1:4]",
    "gasUsed": 311
  },
  {
    "file": "test/Slice.t.sol",
    "test": "testSubslice",
    "name": "subslice bytes (no copy) [4:37]",
    "gasUsed": 311
  },
  {
    "file": "test/Slice.t.sol",
    "test": "testToBytes",
    "name": "Slice (0 bytes) to bytes memory",
    "gasUsed": 476
  },
  {
    "file": "test/Slice.t.sol",
    "test": "testToBytes",
    "name": "Slice (2 bytes) to bytes memory",
    "gasUsed": 511
  },
  {
    "file": "test/Slice.t.sol",
    "test": "testToBytes",
    "name": "Slice (32 bytes) to bytes memory",
    "gasUsed": 724
  },
  {
    "file": "test/Slice.t.sol",
    "test": "testToBytes",
    "name": "Slice (34 bytes) to bytes memory",
    "gasUsed": 727
  },
  {
    "file": "test/Slice.t.sol",
    "test": "testToBytes",
    "name": "Slice (1024 bytes) to bytes memory",
    "gasUsed": 7443
  },
  {
    "file": "test/Slice.t.sol",
    "test": "testToBytes",
    "name": "Slice (1024x1024 bytes) to bytes memory",
    "gasUsed": 9205372
  },
  {
    "file": "test/Slice.t.sol",
    "test": "testToBytes32",
    "name": "Slice to bytes32",
    "gasUsed": 81
  },
  {
    "file": "test/Storage.t.sol",
    "test": "testStoreLoad",
    "name": "store 1 storage slot",
    "gasUsed": 22435
  },
  {
    "file": "test/Storage.t.sol",
    "test": "testStoreLoad",
    "name": "store 34 bytes over 3 storage slots (with offset and safeTrail))",
    "gasUsed": 23160
  },
  {
    "file": "test/Storage.t.sol",
    "test": "testStoreLoad",
    "name": "load 34 bytes over 3 storage slots (with offset and safeTrail))",
    "gasUsed": 1113
  },
  {
    "file": "test/StoreCoreDynamic.t.sol",
    "test": "testGetFieldSlice",
    "name": "get field slice (cold, 1 slot)",
    "gasUsed": 8092
  },
  {
    "file": "test/StoreCoreDynamic.t.sol",
    "test": "testGetFieldSlice",
    "name": "get field slice (warm, 1 slot)",
    "gasUsed": 2194
  },
  {
    "file": "test/StoreCoreDynamic.t.sol",
    "test": "testGetFieldSlice",
    "name": "get field slice (semi-cold, 1 slot)",
    "gasUsed": 4199
  },
  {
    "file": "test/StoreCoreDynamic.t.sol",
    "test": "testGetFieldSlice",
    "name": "get field slice (warm, 2 slots)",
    "gasUsed": 4485
  },
  {
    "file": "test/StoreCoreDynamic.t.sol",
    "test": "testGetSecondFieldLength",
    "name": "get field length (cold, 1 slot)",
    "gasUsed": 7959
  },
  {
    "file": "test/StoreCoreDynamic.t.sol",
    "test": "testGetSecondFieldLength",
    "name": "get field length (warm, 1 slot)",
    "gasUsed": 1956
  },
  {
    "file": "test/StoreCoreDynamic.t.sol",
    "test": "testGetThirdFieldLength",
    "name": "get field length (warm due to , 2 slots)",
    "gasUsed": 7959
  },
  {
    "file": "test/StoreCoreDynamic.t.sol",
    "test": "testGetThirdFieldLength",
    "name": "get field length (warm, 2 slots)",
    "gasUsed": 1955
  },
  {
    "file": "test/StoreCoreDynamic.t.sol",
    "test": "testPopFromSecondField",
    "name": "pop from field (cold, 1 slot, 1 uint32 item)",
    "gasUsed": 30672
  },
  {
    "file": "test/StoreCoreDynamic.t.sol",
    "test": "testPopFromSecondField",
    "name": "pop from field (warm, 1 slot, 1 uint32 item)",
    "gasUsed": 18727
  },
  {
    "file": "test/StoreCoreDynamic.t.sol",
    "test": "testPopFromThirdField",
    "name": "pop from field (cold, 2 slots, 10 uint32 items)",
    "gasUsed": 32555
  },
  {
    "file": "test/StoreCoreDynamic.t.sol",
    "test": "testPopFromThirdField",
    "name": "pop from field (warm, 2 slots, 10 uint32 items)",
    "gasUsed": 18610
  },
  {
    "file": "test/StoreCoreGas.t.sol",
    "test": "testAccessEmptyData",
    "name": "access non-existing record",
    "gasUsed": 7266
  },
  {
    "file": "test/StoreCoreGas.t.sol",
    "test": "testAccessEmptyData",
    "name": "access static field of non-existing record",
    "gasUsed": 2854
  },
  {
    "file": "test/StoreCoreGas.t.sol",
    "test": "testAccessEmptyData",
    "name": "access dynamic field of non-existing record",
    "gasUsed": 3527
  },
  {
    "file": "test/StoreCoreGas.t.sol",
    "test": "testAccessEmptyData",
    "name": "access length of dynamic field of non-existing record",
    "gasUsed": 1328
  },
  {
    "file": "test/StoreCoreGas.t.sol",
    "test": "testAccessEmptyData",
    "name": "access slice of dynamic field of non-existing record",
    "gasUsed": 1264
  },
  {
    "file": "test/StoreCoreGas.t.sol",
    "test": "testDeleteData",
    "name": "delete record (complex data, 3 slots)",
    "gasUsed": 10319
  },
  {
    "file": "test/StoreCoreGas.t.sol",
    "test": "testHasSchema",
    "name": "Check for existence of table (existent)",
    "gasUsed": 1127
  },
  {
    "file": "test/StoreCoreGas.t.sol",
    "test": "testHasSchema",
    "name": "check for existence of table (non-existent)",
    "gasUsed": 3129
  },
  {
    "file": "test/StoreCoreGas.t.sol",
    "test": "testHooks",
    "name": "register subscriber",
    "gasUsed": 66278
  },
  {
    "file": "test/StoreCoreGas.t.sol",
    "test": "testHooks",
    "name": "set record on table with subscriber",
    "gasUsed": 74179
  },
  {
    "file": "test/StoreCoreGas.t.sol",
    "test": "testHooks",
    "name": "set static field on table with subscriber",
    "gasUsed": 30094
  },
  {
    "file": "test/StoreCoreGas.t.sol",
    "test": "testHooks",
    "name": "delete record on table with subscriber",
    "gasUsed": 22755
  },
  {
    "file": "test/StoreCoreGas.t.sol",
    "test": "testHooksDynamicData",
    "name": "register subscriber",
    "gasUsed": 66278
  },
  {
    "file": "test/StoreCoreGas.t.sol",
    "test": "testHooksDynamicData",
    "name": "set (dynamic) record on table with subscriber",
    "gasUsed": 167506
  },
  {
    "file": "test/StoreCoreGas.t.sol",
    "test": "testHooksDynamicData",
    "name": "set (dynamic) field on table with subscriber",
    "gasUsed": 33244
  },
  {
    "file": "test/StoreCoreGas.t.sol",
    "test": "testHooksDynamicData",
    "name": "delete (dynamic) record on table with subscriber",
    "gasUsed": 24227
  },
  {
    "file": "test/StoreCoreGas.t.sol",
    "test": "testPushToField",
    "name": "push to field (1 slot, 1 uint32 item)",
    "gasUsed": 16404
  },
  {
    "file": "test/StoreCoreGas.t.sol",
    "test": "testPushToField",
    "name": "push to field (2 slots, 10 uint32 items)",
    "gasUsed": 39120
  },
  {
    "file": "test/StoreCoreGas.t.sol",
    "test": "testRegisterAndGetSchema",
    "name": "StoreCore: register schema",
    "gasUsed": 54509
  },
  {
    "file": "test/StoreCoreGas.t.sol",
    "test": "testRegisterAndGetSchema",
    "name": "StoreCore: get schema (warm)",
    "gasUsed": 1128
  },
  {
    "file": "test/StoreCoreGas.t.sol",
    "test": "testRegisterAndGetSchema",
    "name": "StoreCore: get key schema (warm)",
    "gasUsed": 2324
  },
  {
    "file": "test/StoreCoreGas.t.sol",
    "test": "testSetAndGetDynamicData",
    "name": "set complex record with dynamic data (4 slots)",
    "gasUsed": 108935
  },
  {
    "file": "test/StoreCoreGas.t.sol",
    "test": "testSetAndGetDynamicData",
    "name": "get complex record with dynamic data (4 slots)",
    "gasUsed": 6277
  },
  {
    "file": "test/StoreCoreGas.t.sol",
    "test": "testSetAndGetDynamicData",
    "name": "compare: Set complex record with dynamic data using native solidity",
    "gasUsed": 116842
  },
  {
    "file": "test/StoreCoreGas.t.sol",
    "test": "testSetAndGetDynamicData",
    "name": "compare: Set complex record with dynamic data using abi.encode",
    "gasUsed": 267369
  },
  {
    "file": "test/StoreCoreGas.t.sol",
    "test": "testSetAndGetDynamicDataLength",
    "name": "set dynamic length of dynamic index 0",
    "gasUsed": 23610
  },
  {
    "file": "test/StoreCoreGas.t.sol",
    "test": "testSetAndGetDynamicDataLength",
    "name": "set dynamic length of dynamic index 1",
    "gasUsed": 1711
  },
  {
    "file": "test/StoreCoreGas.t.sol",
    "test": "testSetAndGetDynamicDataLength",
    "name": "reduce dynamic length of dynamic index 0",
    "gasUsed": 1699
  },
  {
    "file": "test/StoreCoreGas.t.sol",
    "test": "testSetAndGetField",
    "name": "set static field (1 slot)",
    "gasUsed": 39250
  },
  {
    "file": "test/StoreCoreGas.t.sol",
    "test": "testSetAndGetField",
    "name": "get static field (1 slot)",
    "gasUsed": 2855
  },
  {
    "file": "test/StoreCoreGas.t.sol",
    "test": "testSetAndGetField",
    "name": "set static field (overlap 2 slot)",
    "gasUsed": 34286
  },
  {
    "file": "test/StoreCoreGas.t.sol",
    "test": "testSetAndGetField",
    "name": "get static field (overlap 2 slot)",
    "gasUsed": 3769
  },
  {
    "file": "test/StoreCoreGas.t.sol",
    "test": "testSetAndGetField",
    "name": "set dynamic field (1 slot, first dynamic field)",
    "gasUsed": 56711
  },
  {
    "file": "test/StoreCoreGas.t.sol",
    "test": "testSetAndGetField",
    "name": "get dynamic field (1 slot, first dynamic field)",
    "gasUsed": 3751
  },
  {
    "file": "test/StoreCoreGas.t.sol",
    "test": "testSetAndGetField",
    "name": "set dynamic field (1 slot, second dynamic field)",
    "gasUsed": 34843
  },
  {
    "file": "test/StoreCoreGas.t.sol",
    "test": "testSetAndGetField",
    "name": "get dynamic field (1 slot, second dynamic field)",
    "gasUsed": 3766
  },
  {
    "file": "test/StoreCoreGas.t.sol",
    "test": "testSetAndGetStaticData",
    "name": "set static record (1 slot)",
    "gasUsed": 38712
  },
  {
    "file": "test/StoreCoreGas.t.sol",
    "test": "testSetAndGetStaticData",
    "name": "get static record (1 slot)",
    "gasUsed": 1265
  },
  {
    "file": "test/StoreCoreGas.t.sol",
    "test": "testSetAndGetStaticDataSpanningWords",
    "name": "set static record (2 slots)",
    "gasUsed": 61280
  },
  {
    "file": "test/StoreCoreGas.t.sol",
    "test": "testSetAndGetStaticDataSpanningWords",
    "name": "get static record (2 slots)",
    "gasUsed": 1514
  },
  {
    "file": "test/StoreCoreGas.t.sol",
    "test": "testSetMetadata",
    "name": "StoreCore: set table metadata",
    "gasUsed": 252559
  },
  {
    "file": "test/StoreCoreGas.t.sol",
    "test": "testUpdateInField",
    "name": "update in field (1 slot, 1 uint32 item)",
    "gasUsed": 15950
  },
  {
    "file": "test/StoreCoreGas.t.sol",
    "test": "testUpdateInField",
    "name": "push to field (2 slots, 6 uint64 items)",
    "gasUsed": 17041
  },
  {
    "file": "test/StoreMetadata.t.sol",
    "test": "testSetAndGet",
    "name": "set record in StoreMetadataTable",
    "gasUsed": 251032
  },
  {
    "file": "test/StoreMetadata.t.sol",
    "test": "testSetAndGet",
    "name": "get record from StoreMetadataTable",
    "gasUsed": 11908
  },
  {
    "file": "test/StoreSwitch.t.sol",
    "test": "testDelegatecall",
    "name": "get Store address",
    "gasUsed": 2170
  },
  {
    "file": "test/StoreSwitch.t.sol",
    "test": "testNoDelegatecall",
    "name": "get Store address",
    "gasUsed": 2173
  },
  {
    "file": "test/tables/Callbacks.t.sol",
    "test": "testSetAndGet",
    "name": "set field in Callbacks",
    "gasUsed": 62115
  },
  {
    "file": "test/tables/Callbacks.t.sol",
    "test": "testSetAndGet",
    "name": "get field from Callbacks (warm)",
    "gasUsed": 5245
  },
  {
    "file": "test/tables/Callbacks.t.sol",
    "test": "testSetAndGet",
    "name": "push field to Callbacks",
    "gasUsed": 39817
  },
  {
    "file": "test/tables/Hooks.t.sol",
    "test": "testSetAndGet",
    "name": "set field in Hooks",
    "gasUsed": 64272
  },
  {
    "file": "test/tables/Hooks.t.sol",
    "test": "testSetAndGet",
    "name": "get field from Hooks (warm)",
    "gasUsed": 5395
  },
  {
    "file": "test/tables/Hooks.t.sol",
    "test": "testSetAndGet",
    "name": "push field to Hooks",
    "gasUsed": 39808
  },
  {
    "file": "test/tightcoder/DecodeSlice.t.sol",
    "test": "testToArrayUint32",
    "name": "decode packed uint32[]",
    "gasUsed": 785
  },
  {
    "file": "test/tightcoder/DecodeSlice.t.sol",
    "test": "testToBytes32Array",
    "name": "decode packed bytes32[]",
    "gasUsed": 611
  },
  {
    "file": "test/tightcoder/EncodeArray.t.sol",
    "test": "testEncodeBytesArray",
    "name": "encode packed bytes[]",
    "gasUsed": 1357
  },
  {
    "file": "test/tightcoder/EncodeArray.t.sol",
    "test": "testEncodeUint16Array",
    "name": "encode packed uint16[]",
    "gasUsed": 1143
  },
  {
    "file": "test/tightcoder/EncodeArray.t.sol",
    "test": "testEncodeUint32Array",
    "name": "encode packed uint32[]",
    "gasUsed": 1049
  },
  {
    "file": "test/tightcoder/EncodeArray.t.sol",
    "test": "testEncodeUint8Array",
    "name": "encode packed uint8[]",
    "gasUsed": 1038
  },
  {
    "file": "test/tightcoder/TightCoder.t.sol",
    "test": "testFromAndToUint32Array",
    "name": "decode packed uint32[]",
    "gasUsed": 788
  },
  {
    "file": "test/tightcoder/TightCoder.t.sol",
    "test": "testToAndFromBytes24Array",
    "name": "encode packed bytes24[]",
    "gasUsed": 886
  },
  {
    "file": "test/tightcoder/TightCoder.t.sol",
    "test": "testToAndFromBytes24Array",
    "name": "decode packed uint32[]",
    "gasUsed": 622
  },
  {
    "file": "test/Vector2.t.sol",
    "test": "testRegisterAndGetSchema",
    "name": "register Vector2 schema",
    "gasUsed": 58890
  },
  {
    "file": "test/Vector2.t.sol",
    "test": "testSetAndGet",
    "name": "set Vector2 record",
    "gasUsed": 37531
  },
  {
    "file": "test/Vector2.t.sol",
    "test": "testSetAndGet",
    "name": "get Vector2 record",
    "gasUsed": 4402
  }
]
