// SPDX-License-Identifier: MIT
pragma solidity >=0.8.21;

/* Autogenerated file. Do not edit manually. */
import { TightCoder } from "./TightCoder.sol";

/**
 * @title EncodeArray
 * @dev This library provides utilities for encoding arrays into tightly packed bytes representations.
 */
library EncodeArray {
  /**
   * @notice Encodes an array of uint8 into a tightly packed bytes representation.
   * @param _input The array of uint8 values to be encoded.
   * @return The resulting tightly packed bytes representation of the input array.
   */
  function encode(uint8[] memory _input) internal pure returns (bytes memory) {
    bytes32[] memory _genericArray;
    assembly {
      _genericArray := _input
    }
    return TightCoder.encode(_genericArray, 1, 248);
  }

  /**
   * @notice Encodes an array of uint16 into a tightly packed bytes representation.
   * @param _input The array of uint16 values to be encoded.
   * @return The resulting tightly packed bytes representation of the input array.
   */
  function encode(uint16[] memory _input) internal pure returns (bytes memory) {
    bytes32[] memory _genericArray;
    assembly {
      _genericArray := _input
    }
    return TightCoder.encode(_genericArray, 2, 240);
  }

  /**
   * @notice Encodes an array of uint24 into a tightly packed bytes representation.
   * @param _input The array of uint24 values to be encoded.
   * @return The resulting tightly packed bytes representation of the input array.
   */
  function encode(uint24[] memory _input) internal pure returns (bytes memory) {
    bytes32[] memory _genericArray;
    assembly {
      _genericArray := _input
    }
    return TightCoder.encode(_genericArray, 3, 232);
  }

  /**
   * @notice Encodes an array of uint32 into a tightly packed bytes representation.
   * @param _input The array of uint32 values to be encoded.
   * @return The resulting tightly packed bytes representation of the input array.
   */
  function encode(uint32[] memory _input) internal pure returns (bytes memory) {
    bytes32[] memory _genericArray;
    assembly {
      _genericArray := _input
    }
    return TightCoder.encode(_genericArray, 4, 224);
  }

  /**
   * @notice Encodes an array of uint40 into a tightly packed bytes representation.
   * @param _input The array of uint40 values to be encoded.
   * @return The resulting tightly packed bytes representation of the input array.
   */
  function encode(uint40[] memory _input) internal pure returns (bytes memory) {
    bytes32[] memory _genericArray;
    assembly {
      _genericArray := _input
    }
    return TightCoder.encode(_genericArray, 5, 216);
  }

  /**
   * @notice Encodes an array of uint48 into a tightly packed bytes representation.
   * @param _input The array of uint48 values to be encoded.
   * @return The resulting tightly packed bytes representation of the input array.
   */
  function encode(uint48[] memory _input) internal pure returns (bytes memory) {
    bytes32[] memory _genericArray;
    assembly {
      _genericArray := _input
    }
    return TightCoder.encode(_genericArray, 6, 208);
  }

  /**
   * @notice Encodes an array of uint56 into a tightly packed bytes representation.
   * @param _input The array of uint56 values to be encoded.
   * @return The resulting tightly packed bytes representation of the input array.
   */
  function encode(uint56[] memory _input) internal pure returns (bytes memory) {
    bytes32[] memory _genericArray;
    assembly {
      _genericArray := _input
    }
    return TightCoder.encode(_genericArray, 7, 200);
  }

  /**
   * @notice Encodes an array of uint64 into a tightly packed bytes representation.
   * @param _input The array of uint64 values to be encoded.
   * @return The resulting tightly packed bytes representation of the input array.
   */
  function encode(uint64[] memory _input) internal pure returns (bytes memory) {
    bytes32[] memory _genericArray;
    assembly {
      _genericArray := _input
    }
    return TightCoder.encode(_genericArray, 8, 192);
  }

  /**
   * @notice Encodes an array of uint72 into a tightly packed bytes representation.
   * @param _input The array of uint72 values to be encoded.
   * @return The resulting tightly packed bytes representation of the input array.
   */
  function encode(uint72[] memory _input) internal pure returns (bytes memory) {
    bytes32[] memory _genericArray;
    assembly {
      _genericArray := _input
    }
    return TightCoder.encode(_genericArray, 9, 184);
  }

  /**
   * @notice Encodes an array of uint80 into a tightly packed bytes representation.
   * @param _input The array of uint80 values to be encoded.
   * @return The resulting tightly packed bytes representation of the input array.
   */
  function encode(uint80[] memory _input) internal pure returns (bytes memory) {
    bytes32[] memory _genericArray;
    assembly {
      _genericArray := _input
    }
    return TightCoder.encode(_genericArray, 10, 176);
  }

  /**
   * @notice Encodes an array of uint88 into a tightly packed bytes representation.
   * @param _input The array of uint88 values to be encoded.
   * @return The resulting tightly packed bytes representation of the input array.
   */
  function encode(uint88[] memory _input) internal pure returns (bytes memory) {
    bytes32[] memory _genericArray;
    assembly {
      _genericArray := _input
    }
    return TightCoder.encode(_genericArray, 11, 168);
  }

  /**
   * @notice Encodes an array of uint96 into a tightly packed bytes representation.
   * @param _input The array of uint96 values to be encoded.
   * @return The resulting tightly packed bytes representation of the input array.
   */
  function encode(uint96[] memory _input) internal pure returns (bytes memory) {
    bytes32[] memory _genericArray;
    assembly {
      _genericArray := _input
    }
    return TightCoder.encode(_genericArray, 12, 160);
  }

  /**
   * @notice Encodes an array of uint104 into a tightly packed bytes representation.
   * @param _input The array of uint104 values to be encoded.
   * @return The resulting tightly packed bytes representation of the input array.
   */
  function encode(uint104[] memory _input) internal pure returns (bytes memory) {
    bytes32[] memory _genericArray;
    assembly {
      _genericArray := _input
    }
    return TightCoder.encode(_genericArray, 13, 152);
  }

  /**
   * @notice Encodes an array of uint112 into a tightly packed bytes representation.
   * @param _input The array of uint112 values to be encoded.
   * @return The resulting tightly packed bytes representation of the input array.
   */
  function encode(uint112[] memory _input) internal pure returns (bytes memory) {
    bytes32[] memory _genericArray;
    assembly {
      _genericArray := _input
    }
    return TightCoder.encode(_genericArray, 14, 144);
  }

  /**
   * @notice Encodes an array of uint120 into a tightly packed bytes representation.
   * @param _input The array of uint120 values to be encoded.
   * @return The resulting tightly packed bytes representation of the input array.
   */
  function encode(uint120[] memory _input) internal pure returns (bytes memory) {
    bytes32[] memory _genericArray;
    assembly {
      _genericArray := _input
    }
    return TightCoder.encode(_genericArray, 15, 136);
  }

  /**
   * @notice Encodes an array of uint128 into a tightly packed bytes representation.
   * @param _input The array of uint128 values to be encoded.
   * @return The resulting tightly packed bytes representation of the input array.
   */
  function encode(uint128[] memory _input) internal pure returns (bytes memory) {
    bytes32[] memory _genericArray;
    assembly {
      _genericArray := _input
    }
    return TightCoder.encode(_genericArray, 16, 128);
  }

  /**
   * @notice Encodes an array of uint136 into a tightly packed bytes representation.
   * @param _input The array of uint136 values to be encoded.
   * @return The resulting tightly packed bytes representation of the input array.
   */
  function encode(uint136[] memory _input) internal pure returns (bytes memory) {
    bytes32[] memory _genericArray;
    assembly {
      _genericArray := _input
    }
    return TightCoder.encode(_genericArray, 17, 120);
  }

  /**
   * @notice Encodes an array of uint144 into a tightly packed bytes representation.
   * @param _input The array of uint144 values to be encoded.
   * @return The resulting tightly packed bytes representation of the input array.
   */
  function encode(uint144[] memory _input) internal pure returns (bytes memory) {
    bytes32[] memory _genericArray;
    assembly {
      _genericArray := _input
    }
    return TightCoder.encode(_genericArray, 18, 112);
  }

  /**
   * @notice Encodes an array of uint152 into a tightly packed bytes representation.
   * @param _input The array of uint152 values to be encoded.
   * @return The resulting tightly packed bytes representation of the input array.
   */
  function encode(uint152[] memory _input) internal pure returns (bytes memory) {
    bytes32[] memory _genericArray;
    assembly {
      _genericArray := _input
    }
    return TightCoder.encode(_genericArray, 19, 104);
  }

  /**
   * @notice Encodes an array of uint160 into a tightly packed bytes representation.
   * @param _input The array of uint160 values to be encoded.
   * @return The resulting tightly packed bytes representation of the input array.
   */
  function encode(uint160[] memory _input) internal pure returns (bytes memory) {
    bytes32[] memory _genericArray;
    assembly {
      _genericArray := _input
    }
    return TightCoder.encode(_genericArray, 20, 96);
  }

  /**
   * @notice Encodes an array of uint168 into a tightly packed bytes representation.
   * @param _input The array of uint168 values to be encoded.
   * @return The resulting tightly packed bytes representation of the input array.
   */
  function encode(uint168[] memory _input) internal pure returns (bytes memory) {
    bytes32[] memory _genericArray;
    assembly {
      _genericArray := _input
    }
    return TightCoder.encode(_genericArray, 21, 88);
  }

  /**
   * @notice Encodes an array of uint176 into a tightly packed bytes representation.
   * @param _input The array of uint176 values to be encoded.
   * @return The resulting tightly packed bytes representation of the input array.
   */
  function encode(uint176[] memory _input) internal pure returns (bytes memory) {
    bytes32[] memory _genericArray;
    assembly {
      _genericArray := _input
    }
    return TightCoder.encode(_genericArray, 22, 80);
  }

  /**
   * @notice Encodes an array of uint184 into a tightly packed bytes representation.
   * @param _input The array of uint184 values to be encoded.
   * @return The resulting tightly packed bytes representation of the input array.
   */
  function encode(uint184[] memory _input) internal pure returns (bytes memory) {
    bytes32[] memory _genericArray;
    assembly {
      _genericArray := _input
    }
    return TightCoder.encode(_genericArray, 23, 72);
  }

  /**
   * @notice Encodes an array of uint192 into a tightly packed bytes representation.
   * @param _input The array of uint192 values to be encoded.
   * @return The resulting tightly packed bytes representation of the input array.
   */
  function encode(uint192[] memory _input) internal pure returns (bytes memory) {
    bytes32[] memory _genericArray;
    assembly {
      _genericArray := _input
    }
    return TightCoder.encode(_genericArray, 24, 64);
  }

  /**
   * @notice Encodes an array of uint200 into a tightly packed bytes representation.
   * @param _input The array of uint200 values to be encoded.
   * @return The resulting tightly packed bytes representation of the input array.
   */
  function encode(uint200[] memory _input) internal pure returns (bytes memory) {
    bytes32[] memory _genericArray;
    assembly {
      _genericArray := _input
    }
    return TightCoder.encode(_genericArray, 25, 56);
  }

  /**
   * @notice Encodes an array of uint208 into a tightly packed bytes representation.
   * @param _input The array of uint208 values to be encoded.
   * @return The resulting tightly packed bytes representation of the input array.
   */
  function encode(uint208[] memory _input) internal pure returns (bytes memory) {
    bytes32[] memory _genericArray;
    assembly {
      _genericArray := _input
    }
    return TightCoder.encode(_genericArray, 26, 48);
  }

  /**
   * @notice Encodes an array of uint216 into a tightly packed bytes representation.
   * @param _input The array of uint216 values to be encoded.
   * @return The resulting tightly packed bytes representation of the input array.
   */
  function encode(uint216[] memory _input) internal pure returns (bytes memory) {
    bytes32[] memory _genericArray;
    assembly {
      _genericArray := _input
    }
    return TightCoder.encode(_genericArray, 27, 40);
  }

  /**
   * @notice Encodes an array of uint224 into a tightly packed bytes representation.
   * @param _input The array of uint224 values to be encoded.
   * @return The resulting tightly packed bytes representation of the input array.
   */
  function encode(uint224[] memory _input) internal pure returns (bytes memory) {
    bytes32[] memory _genericArray;
    assembly {
      _genericArray := _input
    }
    return TightCoder.encode(_genericArray, 28, 32);
  }

  /**
   * @notice Encodes an array of uint232 into a tightly packed bytes representation.
   * @param _input The array of uint232 values to be encoded.
   * @return The resulting tightly packed bytes representation of the input array.
   */
  function encode(uint232[] memory _input) internal pure returns (bytes memory) {
    bytes32[] memory _genericArray;
    assembly {
      _genericArray := _input
    }
    return TightCoder.encode(_genericArray, 29, 24);
  }

  /**
   * @notice Encodes an array of uint240 into a tightly packed bytes representation.
   * @param _input The array of uint240 values to be encoded.
   * @return The resulting tightly packed bytes representation of the input array.
   */
  function encode(uint240[] memory _input) internal pure returns (bytes memory) {
    bytes32[] memory _genericArray;
    assembly {
      _genericArray := _input
    }
    return TightCoder.encode(_genericArray, 30, 16);
  }

  /**
   * @notice Encodes an array of uint248 into a tightly packed bytes representation.
   * @param _input The array of uint248 values to be encoded.
   * @return The resulting tightly packed bytes representation of the input array.
   */
  function encode(uint248[] memory _input) internal pure returns (bytes memory) {
    bytes32[] memory _genericArray;
    assembly {
      _genericArray := _input
    }
    return TightCoder.encode(_genericArray, 31, 8);
  }

  /**
   * @notice Encodes an array of uint256 into a tightly packed bytes representation.
   * @param _input The array of uint256 values to be encoded.
   * @return The resulting tightly packed bytes representation of the input array.
   */
  function encode(uint256[] memory _input) internal pure returns (bytes memory) {
    bytes32[] memory _genericArray;
    assembly {
      _genericArray := _input
    }
    return TightCoder.encode(_genericArray, 32, 0);
  }

  /**
   * @notice Encodes an array of int8 into a tightly packed bytes representation.
   * @param _input The array of int8 values to be encoded.
   * @return The resulting tightly packed bytes representation of the input array.
   */
  function encode(int8[] memory _input) internal pure returns (bytes memory) {
    bytes32[] memory _genericArray;
    assembly {
      _genericArray := _input
    }
    return TightCoder.encode(_genericArray, 1, 248);
  }

  /**
   * @notice Encodes an array of int16 into a tightly packed bytes representation.
   * @param _input The array of int16 values to be encoded.
   * @return The resulting tightly packed bytes representation of the input array.
   */
  function encode(int16[] memory _input) internal pure returns (bytes memory) {
    bytes32[] memory _genericArray;
    assembly {
      _genericArray := _input
    }
    return TightCoder.encode(_genericArray, 2, 240);
  }

  /**
   * @notice Encodes an array of int24 into a tightly packed bytes representation.
   * @param _input The array of int24 values to be encoded.
   * @return The resulting tightly packed bytes representation of the input array.
   */
  function encode(int24[] memory _input) internal pure returns (bytes memory) {
    bytes32[] memory _genericArray;
    assembly {
      _genericArray := _input
    }
    return TightCoder.encode(_genericArray, 3, 232);
  }

  /**
   * @notice Encodes an array of int32 into a tightly packed bytes representation.
   * @param _input The array of int32 values to be encoded.
   * @return The resulting tightly packed bytes representation of the input array.
   */
  function encode(int32[] memory _input) internal pure returns (bytes memory) {
    bytes32[] memory _genericArray;
    assembly {
      _genericArray := _input
    }
    return TightCoder.encode(_genericArray, 4, 224);
  }

  /**
   * @notice Encodes an array of int40 into a tightly packed bytes representation.
   * @param _input The array of int40 values to be encoded.
   * @return The resulting tightly packed bytes representation of the input array.
   */
  function encode(int40[] memory _input) internal pure returns (bytes memory) {
    bytes32[] memory _genericArray;
    assembly {
      _genericArray := _input
    }
    return TightCoder.encode(_genericArray, 5, 216);
  }

  /**
   * @notice Encodes an array of int48 into a tightly packed bytes representation.
   * @param _input The array of int48 values to be encoded.
   * @return The resulting tightly packed bytes representation of the input array.
   */
  function encode(int48[] memory _input) internal pure returns (bytes memory) {
    bytes32[] memory _genericArray;
    assembly {
      _genericArray := _input
    }
    return TightCoder.encode(_genericArray, 6, 208);
  }

  /**
   * @notice Encodes an array of int56 into a tightly packed bytes representation.
   * @param _input The array of int56 values to be encoded.
   * @return The resulting tightly packed bytes representation of the input array.
   */
  function encode(int56[] memory _input) internal pure returns (bytes memory) {
    bytes32[] memory _genericArray;
    assembly {
      _genericArray := _input
    }
    return TightCoder.encode(_genericArray, 7, 200);
  }

  /**
   * @notice Encodes an array of int64 into a tightly packed bytes representation.
   * @param _input The array of int64 values to be encoded.
   * @return The resulting tightly packed bytes representation of the input array.
   */
  function encode(int64[] memory _input) internal pure returns (bytes memory) {
    bytes32[] memory _genericArray;
    assembly {
      _genericArray := _input
    }
    return TightCoder.encode(_genericArray, 8, 192);
  }

  /**
   * @notice Encodes an array of int72 into a tightly packed bytes representation.
   * @param _input The array of int72 values to be encoded.
   * @return The resulting tightly packed bytes representation of the input array.
   */
  function encode(int72[] memory _input) internal pure returns (bytes memory) {
    bytes32[] memory _genericArray;
    assembly {
      _genericArray := _input
    }
    return TightCoder.encode(_genericArray, 9, 184);
  }

  /**
   * @notice Encodes an array of int80 into a tightly packed bytes representation.
   * @param _input The array of int80 values to be encoded.
   * @return The resulting tightly packed bytes representation of the input array.
   */
  function encode(int80[] memory _input) internal pure returns (bytes memory) {
    bytes32[] memory _genericArray;
    assembly {
      _genericArray := _input
    }
    return TightCoder.encode(_genericArray, 10, 176);
  }

  /**
   * @notice Encodes an array of int88 into a tightly packed bytes representation.
   * @param _input The array of int88 values to be encoded.
   * @return The resulting tightly packed bytes representation of the input array.
   */
  function encode(int88[] memory _input) internal pure returns (bytes memory) {
    bytes32[] memory _genericArray;
    assembly {
      _genericArray := _input
    }
    return TightCoder.encode(_genericArray, 11, 168);
  }

  /**
   * @notice Encodes an array of int96 into a tightly packed bytes representation.
   * @param _input The array of int96 values to be encoded.
   * @return The resulting tightly packed bytes representation of the input array.
   */
  function encode(int96[] memory _input) internal pure returns (bytes memory) {
    bytes32[] memory _genericArray;
    assembly {
      _genericArray := _input
    }
    return TightCoder.encode(_genericArray, 12, 160);
  }

  /**
   * @notice Encodes an array of int104 into a tightly packed bytes representation.
   * @param _input The array of int104 values to be encoded.
   * @return The resulting tightly packed bytes representation of the input array.
   */
  function encode(int104[] memory _input) internal pure returns (bytes memory) {
    bytes32[] memory _genericArray;
    assembly {
      _genericArray := _input
    }
    return TightCoder.encode(_genericArray, 13, 152);
  }

  /**
   * @notice Encodes an array of int112 into a tightly packed bytes representation.
   * @param _input The array of int112 values to be encoded.
   * @return The resulting tightly packed bytes representation of the input array.
   */
  function encode(int112[] memory _input) internal pure returns (bytes memory) {
    bytes32[] memory _genericArray;
    assembly {
      _genericArray := _input
    }
    return TightCoder.encode(_genericArray, 14, 144);
  }

  /**
   * @notice Encodes an array of int120 into a tightly packed bytes representation.
   * @param _input The array of int120 values to be encoded.
   * @return The resulting tightly packed bytes representation of the input array.
   */
  function encode(int120[] memory _input) internal pure returns (bytes memory) {
    bytes32[] memory _genericArray;
    assembly {
      _genericArray := _input
    }
    return TightCoder.encode(_genericArray, 15, 136);
  }

  /**
   * @notice Encodes an array of int128 into a tightly packed bytes representation.
   * @param _input The array of int128 values to be encoded.
   * @return The resulting tightly packed bytes representation of the input array.
   */
  function encode(int128[] memory _input) internal pure returns (bytes memory) {
    bytes32[] memory _genericArray;
    assembly {
      _genericArray := _input
    }
    return TightCoder.encode(_genericArray, 16, 128);
  }

  /**
   * @notice Encodes an array of int136 into a tightly packed bytes representation.
   * @param _input The array of int136 values to be encoded.
   * @return The resulting tightly packed bytes representation of the input array.
   */
  function encode(int136[] memory _input) internal pure returns (bytes memory) {
    bytes32[] memory _genericArray;
    assembly {
      _genericArray := _input
    }
    return TightCoder.encode(_genericArray, 17, 120);
  }

  /**
   * @notice Encodes an array of int144 into a tightly packed bytes representation.
   * @param _input The array of int144 values to be encoded.
   * @return The resulting tightly packed bytes representation of the input array.
   */
  function encode(int144[] memory _input) internal pure returns (bytes memory) {
    bytes32[] memory _genericArray;
    assembly {
      _genericArray := _input
    }
    return TightCoder.encode(_genericArray, 18, 112);
  }

  /**
   * @notice Encodes an array of int152 into a tightly packed bytes representation.
   * @param _input The array of int152 values to be encoded.
   * @return The resulting tightly packed bytes representation of the input array.
   */
  function encode(int152[] memory _input) internal pure returns (bytes memory) {
    bytes32[] memory _genericArray;
    assembly {
      _genericArray := _input
    }
    return TightCoder.encode(_genericArray, 19, 104);
  }

  /**
   * @notice Encodes an array of int160 into a tightly packed bytes representation.
   * @param _input The array of int160 values to be encoded.
   * @return The resulting tightly packed bytes representation of the input array.
   */
  function encode(int160[] memory _input) internal pure returns (bytes memory) {
    bytes32[] memory _genericArray;
    assembly {
      _genericArray := _input
    }
    return TightCoder.encode(_genericArray, 20, 96);
  }

  /**
   * @notice Encodes an array of int168 into a tightly packed bytes representation.
   * @param _input The array of int168 values to be encoded.
   * @return The resulting tightly packed bytes representation of the input array.
   */
  function encode(int168[] memory _input) internal pure returns (bytes memory) {
    bytes32[] memory _genericArray;
    assembly {
      _genericArray := _input
    }
    return TightCoder.encode(_genericArray, 21, 88);
  }

  /**
   * @notice Encodes an array of int176 into a tightly packed bytes representation.
   * @param _input The array of int176 values to be encoded.
   * @return The resulting tightly packed bytes representation of the input array.
   */
  function encode(int176[] memory _input) internal pure returns (bytes memory) {
    bytes32[] memory _genericArray;
    assembly {
      _genericArray := _input
    }
    return TightCoder.encode(_genericArray, 22, 80);
  }

  /**
   * @notice Encodes an array of int184 into a tightly packed bytes representation.
   * @param _input The array of int184 values to be encoded.
   * @return The resulting tightly packed bytes representation of the input array.
   */
  function encode(int184[] memory _input) internal pure returns (bytes memory) {
    bytes32[] memory _genericArray;
    assembly {
      _genericArray := _input
    }
    return TightCoder.encode(_genericArray, 23, 72);
  }

  /**
   * @notice Encodes an array of int192 into a tightly packed bytes representation.
   * @param _input The array of int192 values to be encoded.
   * @return The resulting tightly packed bytes representation of the input array.
   */
  function encode(int192[] memory _input) internal pure returns (bytes memory) {
    bytes32[] memory _genericArray;
    assembly {
      _genericArray := _input
    }
    return TightCoder.encode(_genericArray, 24, 64);
  }

  /**
   * @notice Encodes an array of int200 into a tightly packed bytes representation.
   * @param _input The array of int200 values to be encoded.
   * @return The resulting tightly packed bytes representation of the input array.
   */
  function encode(int200[] memory _input) internal pure returns (bytes memory) {
    bytes32[] memory _genericArray;
    assembly {
      _genericArray := _input
    }
    return TightCoder.encode(_genericArray, 25, 56);
  }

  /**
   * @notice Encodes an array of int208 into a tightly packed bytes representation.
   * @param _input The array of int208 values to be encoded.
   * @return The resulting tightly packed bytes representation of the input array.
   */
  function encode(int208[] memory _input) internal pure returns (bytes memory) {
    bytes32[] memory _genericArray;
    assembly {
      _genericArray := _input
    }
    return TightCoder.encode(_genericArray, 26, 48);
  }

  /**
   * @notice Encodes an array of int216 into a tightly packed bytes representation.
   * @param _input The array of int216 values to be encoded.
   * @return The resulting tightly packed bytes representation of the input array.
   */
  function encode(int216[] memory _input) internal pure returns (bytes memory) {
    bytes32[] memory _genericArray;
    assembly {
      _genericArray := _input
    }
    return TightCoder.encode(_genericArray, 27, 40);
  }

  /**
   * @notice Encodes an array of int224 into a tightly packed bytes representation.
   * @param _input The array of int224 values to be encoded.
   * @return The resulting tightly packed bytes representation of the input array.
   */
  function encode(int224[] memory _input) internal pure returns (bytes memory) {
    bytes32[] memory _genericArray;
    assembly {
      _genericArray := _input
    }
    return TightCoder.encode(_genericArray, 28, 32);
  }

  /**
   * @notice Encodes an array of int232 into a tightly packed bytes representation.
   * @param _input The array of int232 values to be encoded.
   * @return The resulting tightly packed bytes representation of the input array.
   */
  function encode(int232[] memory _input) internal pure returns (bytes memory) {
    bytes32[] memory _genericArray;
    assembly {
      _genericArray := _input
    }
    return TightCoder.encode(_genericArray, 29, 24);
  }

  /**
   * @notice Encodes an array of int240 into a tightly packed bytes representation.
   * @param _input The array of int240 values to be encoded.
   * @return The resulting tightly packed bytes representation of the input array.
   */
  function encode(int240[] memory _input) internal pure returns (bytes memory) {
    bytes32[] memory _genericArray;
    assembly {
      _genericArray := _input
    }
    return TightCoder.encode(_genericArray, 30, 16);
  }

  /**
   * @notice Encodes an array of int248 into a tightly packed bytes representation.
   * @param _input The array of int248 values to be encoded.
   * @return The resulting tightly packed bytes representation of the input array.
   */
  function encode(int248[] memory _input) internal pure returns (bytes memory) {
    bytes32[] memory _genericArray;
    assembly {
      _genericArray := _input
    }
    return TightCoder.encode(_genericArray, 31, 8);
  }

  /**
   * @notice Encodes an array of int256 into a tightly packed bytes representation.
   * @param _input The array of int256 values to be encoded.
   * @return The resulting tightly packed bytes representation of the input array.
   */
  function encode(int256[] memory _input) internal pure returns (bytes memory) {
    bytes32[] memory _genericArray;
    assembly {
      _genericArray := _input
    }
    return TightCoder.encode(_genericArray, 32, 0);
  }

  /**
   * @notice Encodes an array of bytes1 into a tightly packed bytes representation.
   * @param _input The array of bytes1 values to be encoded.
   * @return The resulting tightly packed bytes representation of the input array.
   */
  function encode(bytes1[] memory _input) internal pure returns (bytes memory) {
    bytes32[] memory _genericArray;
    assembly {
      _genericArray := _input
    }
    return TightCoder.encode(_genericArray, 1, 0);
  }

  /**
   * @notice Encodes an array of bytes2 into a tightly packed bytes representation.
   * @param _input The array of bytes2 values to be encoded.
   * @return The resulting tightly packed bytes representation of the input array.
   */
  function encode(bytes2[] memory _input) internal pure returns (bytes memory) {
    bytes32[] memory _genericArray;
    assembly {
      _genericArray := _input
    }
    return TightCoder.encode(_genericArray, 2, 0);
  }

  /**
   * @notice Encodes an array of bytes3 into a tightly packed bytes representation.
   * @param _input The array of bytes3 values to be encoded.
   * @return The resulting tightly packed bytes representation of the input array.
   */
  function encode(bytes3[] memory _input) internal pure returns (bytes memory) {
    bytes32[] memory _genericArray;
    assembly {
      _genericArray := _input
    }
    return TightCoder.encode(_genericArray, 3, 0);
  }

  /**
   * @notice Encodes an array of bytes4 into a tightly packed bytes representation.
   * @param _input The array of bytes4 values to be encoded.
   * @return The resulting tightly packed bytes representation of the input array.
   */
  function encode(bytes4[] memory _input) internal pure returns (bytes memory) {
    bytes32[] memory _genericArray;
    assembly {
      _genericArray := _input
    }
    return TightCoder.encode(_genericArray, 4, 0);
  }

  /**
   * @notice Encodes an array of bytes5 into a tightly packed bytes representation.
   * @param _input The array of bytes5 values to be encoded.
   * @return The resulting tightly packed bytes representation of the input array.
   */
  function encode(bytes5[] memory _input) internal pure returns (bytes memory) {
    bytes32[] memory _genericArray;
    assembly {
      _genericArray := _input
    }
    return TightCoder.encode(_genericArray, 5, 0);
  }

  /**
   * @notice Encodes an array of bytes6 into a tightly packed bytes representation.
   * @param _input The array of bytes6 values to be encoded.
   * @return The resulting tightly packed bytes representation of the input array.
   */
  function encode(bytes6[] memory _input) internal pure returns (bytes memory) {
    bytes32[] memory _genericArray;
    assembly {
      _genericArray := _input
    }
    return TightCoder.encode(_genericArray, 6, 0);
  }

  /**
   * @notice Encodes an array of bytes7 into a tightly packed bytes representation.
   * @param _input The array of bytes7 values to be encoded.
   * @return The resulting tightly packed bytes representation of the input array.
   */
  function encode(bytes7[] memory _input) internal pure returns (bytes memory) {
    bytes32[] memory _genericArray;
    assembly {
      _genericArray := _input
    }
    return TightCoder.encode(_genericArray, 7, 0);
  }

  /**
   * @notice Encodes an array of bytes8 into a tightly packed bytes representation.
   * @param _input The array of bytes8 values to be encoded.
   * @return The resulting tightly packed bytes representation of the input array.
   */
  function encode(bytes8[] memory _input) internal pure returns (bytes memory) {
    bytes32[] memory _genericArray;
    assembly {
      _genericArray := _input
    }
    return TightCoder.encode(_genericArray, 8, 0);
  }

  /**
   * @notice Encodes an array of bytes9 into a tightly packed bytes representation.
   * @param _input The array of bytes9 values to be encoded.
   * @return The resulting tightly packed bytes representation of the input array.
   */
  function encode(bytes9[] memory _input) internal pure returns (bytes memory) {
    bytes32[] memory _genericArray;
    assembly {
      _genericArray := _input
    }
    return TightCoder.encode(_genericArray, 9, 0);
  }

  /**
   * @notice Encodes an array of bytes10 into a tightly packed bytes representation.
   * @param _input The array of bytes10 values to be encoded.
   * @return The resulting tightly packed bytes representation of the input array.
   */
  function encode(bytes10[] memory _input) internal pure returns (bytes memory) {
    bytes32[] memory _genericArray;
    assembly {
      _genericArray := _input
    }
    return TightCoder.encode(_genericArray, 10, 0);
  }

  /**
   * @notice Encodes an array of bytes11 into a tightly packed bytes representation.
   * @param _input The array of bytes11 values to be encoded.
   * @return The resulting tightly packed bytes representation of the input array.
   */
  function encode(bytes11[] memory _input) internal pure returns (bytes memory) {
    bytes32[] memory _genericArray;
    assembly {
      _genericArray := _input
    }
    return TightCoder.encode(_genericArray, 11, 0);
  }

  /**
   * @notice Encodes an array of bytes12 into a tightly packed bytes representation.
   * @param _input The array of bytes12 values to be encoded.
   * @return The resulting tightly packed bytes representation of the input array.
   */
  function encode(bytes12[] memory _input) internal pure returns (bytes memory) {
    bytes32[] memory _genericArray;
    assembly {
      _genericArray := _input
    }
    return TightCoder.encode(_genericArray, 12, 0);
  }

  /**
   * @notice Encodes an array of bytes13 into a tightly packed bytes representation.
   * @param _input The array of bytes13 values to be encoded.
   * @return The resulting tightly packed bytes representation of the input array.
   */
  function encode(bytes13[] memory _input) internal pure returns (bytes memory) {
    bytes32[] memory _genericArray;
    assembly {
      _genericArray := _input
    }
    return TightCoder.encode(_genericArray, 13, 0);
  }

  /**
   * @notice Encodes an array of bytes14 into a tightly packed bytes representation.
   * @param _input The array of bytes14 values to be encoded.
   * @return The resulting tightly packed bytes representation of the input array.
   */
  function encode(bytes14[] memory _input) internal pure returns (bytes memory) {
    bytes32[] memory _genericArray;
    assembly {
      _genericArray := _input
    }
    return TightCoder.encode(_genericArray, 14, 0);
  }

  /**
   * @notice Encodes an array of bytes15 into a tightly packed bytes representation.
   * @param _input The array of bytes15 values to be encoded.
   * @return The resulting tightly packed bytes representation of the input array.
   */
  function encode(bytes15[] memory _input) internal pure returns (bytes memory) {
    bytes32[] memory _genericArray;
    assembly {
      _genericArray := _input
    }
    return TightCoder.encode(_genericArray, 15, 0);
  }

  /**
   * @notice Encodes an array of bytes16 into a tightly packed bytes representation.
   * @param _input The array of bytes16 values to be encoded.
   * @return The resulting tightly packed bytes representation of the input array.
   */
  function encode(bytes16[] memory _input) internal pure returns (bytes memory) {
    bytes32[] memory _genericArray;
    assembly {
      _genericArray := _input
    }
    return TightCoder.encode(_genericArray, 16, 0);
  }

  /**
   * @notice Encodes an array of bytes17 into a tightly packed bytes representation.
   * @param _input The array of bytes17 values to be encoded.
   * @return The resulting tightly packed bytes representation of the input array.
   */
  function encode(bytes17[] memory _input) internal pure returns (bytes memory) {
    bytes32[] memory _genericArray;
    assembly {
      _genericArray := _input
    }
    return TightCoder.encode(_genericArray, 17, 0);
  }

  /**
   * @notice Encodes an array of bytes18 into a tightly packed bytes representation.
   * @param _input The array of bytes18 values to be encoded.
   * @return The resulting tightly packed bytes representation of the input array.
   */
  function encode(bytes18[] memory _input) internal pure returns (bytes memory) {
    bytes32[] memory _genericArray;
    assembly {
      _genericArray := _input
    }
    return TightCoder.encode(_genericArray, 18, 0);
  }

  /**
   * @notice Encodes an array of bytes19 into a tightly packed bytes representation.
   * @param _input The array of bytes19 values to be encoded.
   * @return The resulting tightly packed bytes representation of the input array.
   */
  function encode(bytes19[] memory _input) internal pure returns (bytes memory) {
    bytes32[] memory _genericArray;
    assembly {
      _genericArray := _input
    }
    return TightCoder.encode(_genericArray, 19, 0);
  }

  /**
   * @notice Encodes an array of bytes20 into a tightly packed bytes representation.
   * @param _input The array of bytes20 values to be encoded.
   * @return The resulting tightly packed bytes representation of the input array.
   */
  function encode(bytes20[] memory _input) internal pure returns (bytes memory) {
    bytes32[] memory _genericArray;
    assembly {
      _genericArray := _input
    }
    return TightCoder.encode(_genericArray, 20, 0);
  }

  /**
   * @notice Encodes an array of bytes21 into a tightly packed bytes representation.
   * @param _input The array of bytes21 values to be encoded.
   * @return The resulting tightly packed bytes representation of the input array.
   */
  function encode(bytes21[] memory _input) internal pure returns (bytes memory) {
    bytes32[] memory _genericArray;
    assembly {
      _genericArray := _input
    }
    return TightCoder.encode(_genericArray, 21, 0);
  }

  /**
   * @notice Encodes an array of bytes22 into a tightly packed bytes representation.
   * @param _input The array of bytes22 values to be encoded.
   * @return The resulting tightly packed bytes representation of the input array.
   */
  function encode(bytes22[] memory _input) internal pure returns (bytes memory) {
    bytes32[] memory _genericArray;
    assembly {
      _genericArray := _input
    }
    return TightCoder.encode(_genericArray, 22, 0);
  }

  /**
   * @notice Encodes an array of bytes23 into a tightly packed bytes representation.
   * @param _input The array of bytes23 values to be encoded.
   * @return The resulting tightly packed bytes representation of the input array.
   */
  function encode(bytes23[] memory _input) internal pure returns (bytes memory) {
    bytes32[] memory _genericArray;
    assembly {
      _genericArray := _input
    }
    return TightCoder.encode(_genericArray, 23, 0);
  }

  /**
   * @notice Encodes an array of bytes24 into a tightly packed bytes representation.
   * @param _input The array of bytes24 values to be encoded.
   * @return The resulting tightly packed bytes representation of the input array.
   */
  function encode(bytes24[] memory _input) internal pure returns (bytes memory) {
    bytes32[] memory _genericArray;
    assembly {
      _genericArray := _input
    }
    return TightCoder.encode(_genericArray, 24, 0);
  }

  /**
   * @notice Encodes an array of bytes25 into a tightly packed bytes representation.
   * @param _input The array of bytes25 values to be encoded.
   * @return The resulting tightly packed bytes representation of the input array.
   */
  function encode(bytes25[] memory _input) internal pure returns (bytes memory) {
    bytes32[] memory _genericArray;
    assembly {
      _genericArray := _input
    }
    return TightCoder.encode(_genericArray, 25, 0);
  }

  /**
   * @notice Encodes an array of bytes26 into a tightly packed bytes representation.
   * @param _input The array of bytes26 values to be encoded.
   * @return The resulting tightly packed bytes representation of the input array.
   */
  function encode(bytes26[] memory _input) internal pure returns (bytes memory) {
    bytes32[] memory _genericArray;
    assembly {
      _genericArray := _input
    }
    return TightCoder.encode(_genericArray, 26, 0);
  }

  /**
   * @notice Encodes an array of bytes27 into a tightly packed bytes representation.
   * @param _input The array of bytes27 values to be encoded.
   * @return The resulting tightly packed bytes representation of the input array.
   */
  function encode(bytes27[] memory _input) internal pure returns (bytes memory) {
    bytes32[] memory _genericArray;
    assembly {
      _genericArray := _input
    }
    return TightCoder.encode(_genericArray, 27, 0);
  }

  /**
   * @notice Encodes an array of bytes28 into a tightly packed bytes representation.
   * @param _input The array of bytes28 values to be encoded.
   * @return The resulting tightly packed bytes representation of the input array.
   */
  function encode(bytes28[] memory _input) internal pure returns (bytes memory) {
    bytes32[] memory _genericArray;
    assembly {
      _genericArray := _input
    }
    return TightCoder.encode(_genericArray, 28, 0);
  }

  /**
   * @notice Encodes an array of bytes29 into a tightly packed bytes representation.
   * @param _input The array of bytes29 values to be encoded.
   * @return The resulting tightly packed bytes representation of the input array.
   */
  function encode(bytes29[] memory _input) internal pure returns (bytes memory) {
    bytes32[] memory _genericArray;
    assembly {
      _genericArray := _input
    }
    return TightCoder.encode(_genericArray, 29, 0);
  }

  /**
   * @notice Encodes an array of bytes30 into a tightly packed bytes representation.
   * @param _input The array of bytes30 values to be encoded.
   * @return The resulting tightly packed bytes representation of the input array.
   */
  function encode(bytes30[] memory _input) internal pure returns (bytes memory) {
    bytes32[] memory _genericArray;
    assembly {
      _genericArray := _input
    }
    return TightCoder.encode(_genericArray, 30, 0);
  }

  /**
   * @notice Encodes an array of bytes31 into a tightly packed bytes representation.
   * @param _input The array of bytes31 values to be encoded.
   * @return The resulting tightly packed bytes representation of the input array.
   */
  function encode(bytes31[] memory _input) internal pure returns (bytes memory) {
    bytes32[] memory _genericArray;
    assembly {
      _genericArray := _input
    }
    return TightCoder.encode(_genericArray, 31, 0);
  }

  /**
   * @notice Encodes an array of bytes32 into a tightly packed bytes representation.
   * @param _input The array of bytes32 values to be encoded.
   * @return The resulting tightly packed bytes representation of the input array.
   */
  function encode(bytes32[] memory _input) internal pure returns (bytes memory) {
    bytes32[] memory _genericArray;
    assembly {
      _genericArray := _input
    }
    return TightCoder.encode(_genericArray, 32, 0);
  }

  /**
   * @notice Encodes an array of bool into a tightly packed bytes representation.
   * @param _input The array of bool values to be encoded.
   * @return The resulting tightly packed bytes representation of the input array.
   */
  function encode(bool[] memory _input) internal pure returns (bytes memory) {
    bytes32[] memory _genericArray;
    assembly {
      _genericArray := _input
    }
    return TightCoder.encode(_genericArray, 1, 248);
  }

  /**
   * @notice Encodes an array of address into a tightly packed bytes representation.
   * @param _input The array of address values to be encoded.
   * @return The resulting tightly packed bytes representation of the input array.
   */
  function encode(address[] memory _input) internal pure returns (bytes memory) {
    bytes32[] memory _genericArray;
    assembly {
      _genericArray := _input
    }
    return TightCoder.encode(_genericArray, 20, 96);
  }
}
