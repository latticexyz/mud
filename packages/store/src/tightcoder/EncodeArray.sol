// SPDX-License-Identifier: MIT
pragma solidity >=0.8.21;

/* Autogenerated file. Do not edit manually. */
import { TightCoder } from "./TightCoder.sol";

library EncodeArray {
  function encode(uint8[] memory _input) internal pure returns (bytes memory) {
    bytes32[] memory _genericArray;
    assembly {
      _genericArray := _input
    }
    return TightCoder.encode(_genericArray, 1, 248);
  }

  function encode(uint16[] memory _input) internal pure returns (bytes memory) {
    bytes32[] memory _genericArray;
    assembly {
      _genericArray := _input
    }
    return TightCoder.encode(_genericArray, 2, 240);
  }

  function encode(uint24[] memory _input) internal pure returns (bytes memory) {
    bytes32[] memory _genericArray;
    assembly {
      _genericArray := _input
    }
    return TightCoder.encode(_genericArray, 3, 232);
  }

  function encode(uint32[] memory _input) internal pure returns (bytes memory) {
    bytes32[] memory _genericArray;
    assembly {
      _genericArray := _input
    }
    return TightCoder.encode(_genericArray, 4, 224);
  }

  function encode(uint40[] memory _input) internal pure returns (bytes memory) {
    bytes32[] memory _genericArray;
    assembly {
      _genericArray := _input
    }
    return TightCoder.encode(_genericArray, 5, 216);
  }

  function encode(uint48[] memory _input) internal pure returns (bytes memory) {
    bytes32[] memory _genericArray;
    assembly {
      _genericArray := _input
    }
    return TightCoder.encode(_genericArray, 6, 208);
  }

  function encode(uint56[] memory _input) internal pure returns (bytes memory) {
    bytes32[] memory _genericArray;
    assembly {
      _genericArray := _input
    }
    return TightCoder.encode(_genericArray, 7, 200);
  }

  function encode(uint64[] memory _input) internal pure returns (bytes memory) {
    bytes32[] memory _genericArray;
    assembly {
      _genericArray := _input
    }
    return TightCoder.encode(_genericArray, 8, 192);
  }

  function encode(uint72[] memory _input) internal pure returns (bytes memory) {
    bytes32[] memory _genericArray;
    assembly {
      _genericArray := _input
    }
    return TightCoder.encode(_genericArray, 9, 184);
  }

  function encode(uint80[] memory _input) internal pure returns (bytes memory) {
    bytes32[] memory _genericArray;
    assembly {
      _genericArray := _input
    }
    return TightCoder.encode(_genericArray, 10, 176);
  }

  function encode(uint88[] memory _input) internal pure returns (bytes memory) {
    bytes32[] memory _genericArray;
    assembly {
      _genericArray := _input
    }
    return TightCoder.encode(_genericArray, 11, 168);
  }

  function encode(uint96[] memory _input) internal pure returns (bytes memory) {
    bytes32[] memory _genericArray;
    assembly {
      _genericArray := _input
    }
    return TightCoder.encode(_genericArray, 12, 160);
  }

  function encode(uint104[] memory _input) internal pure returns (bytes memory) {
    bytes32[] memory _genericArray;
    assembly {
      _genericArray := _input
    }
    return TightCoder.encode(_genericArray, 13, 152);
  }

  function encode(uint112[] memory _input) internal pure returns (bytes memory) {
    bytes32[] memory _genericArray;
    assembly {
      _genericArray := _input
    }
    return TightCoder.encode(_genericArray, 14, 144);
  }

  function encode(uint120[] memory _input) internal pure returns (bytes memory) {
    bytes32[] memory _genericArray;
    assembly {
      _genericArray := _input
    }
    return TightCoder.encode(_genericArray, 15, 136);
  }

  function encode(uint128[] memory _input) internal pure returns (bytes memory) {
    bytes32[] memory _genericArray;
    assembly {
      _genericArray := _input
    }
    return TightCoder.encode(_genericArray, 16, 128);
  }

  function encode(uint136[] memory _input) internal pure returns (bytes memory) {
    bytes32[] memory _genericArray;
    assembly {
      _genericArray := _input
    }
    return TightCoder.encode(_genericArray, 17, 120);
  }

  function encode(uint144[] memory _input) internal pure returns (bytes memory) {
    bytes32[] memory _genericArray;
    assembly {
      _genericArray := _input
    }
    return TightCoder.encode(_genericArray, 18, 112);
  }

  function encode(uint152[] memory _input) internal pure returns (bytes memory) {
    bytes32[] memory _genericArray;
    assembly {
      _genericArray := _input
    }
    return TightCoder.encode(_genericArray, 19, 104);
  }

  function encode(uint160[] memory _input) internal pure returns (bytes memory) {
    bytes32[] memory _genericArray;
    assembly {
      _genericArray := _input
    }
    return TightCoder.encode(_genericArray, 20, 96);
  }

  function encode(uint168[] memory _input) internal pure returns (bytes memory) {
    bytes32[] memory _genericArray;
    assembly {
      _genericArray := _input
    }
    return TightCoder.encode(_genericArray, 21, 88);
  }

  function encode(uint176[] memory _input) internal pure returns (bytes memory) {
    bytes32[] memory _genericArray;
    assembly {
      _genericArray := _input
    }
    return TightCoder.encode(_genericArray, 22, 80);
  }

  function encode(uint184[] memory _input) internal pure returns (bytes memory) {
    bytes32[] memory _genericArray;
    assembly {
      _genericArray := _input
    }
    return TightCoder.encode(_genericArray, 23, 72);
  }

  function encode(uint192[] memory _input) internal pure returns (bytes memory) {
    bytes32[] memory _genericArray;
    assembly {
      _genericArray := _input
    }
    return TightCoder.encode(_genericArray, 24, 64);
  }

  function encode(uint200[] memory _input) internal pure returns (bytes memory) {
    bytes32[] memory _genericArray;
    assembly {
      _genericArray := _input
    }
    return TightCoder.encode(_genericArray, 25, 56);
  }

  function encode(uint208[] memory _input) internal pure returns (bytes memory) {
    bytes32[] memory _genericArray;
    assembly {
      _genericArray := _input
    }
    return TightCoder.encode(_genericArray, 26, 48);
  }

  function encode(uint216[] memory _input) internal pure returns (bytes memory) {
    bytes32[] memory _genericArray;
    assembly {
      _genericArray := _input
    }
    return TightCoder.encode(_genericArray, 27, 40);
  }

  function encode(uint224[] memory _input) internal pure returns (bytes memory) {
    bytes32[] memory _genericArray;
    assembly {
      _genericArray := _input
    }
    return TightCoder.encode(_genericArray, 28, 32);
  }

  function encode(uint232[] memory _input) internal pure returns (bytes memory) {
    bytes32[] memory _genericArray;
    assembly {
      _genericArray := _input
    }
    return TightCoder.encode(_genericArray, 29, 24);
  }

  function encode(uint240[] memory _input) internal pure returns (bytes memory) {
    bytes32[] memory _genericArray;
    assembly {
      _genericArray := _input
    }
    return TightCoder.encode(_genericArray, 30, 16);
  }

  function encode(uint248[] memory _input) internal pure returns (bytes memory) {
    bytes32[] memory _genericArray;
    assembly {
      _genericArray := _input
    }
    return TightCoder.encode(_genericArray, 31, 8);
  }

  function encode(uint256[] memory _input) internal pure returns (bytes memory) {
    bytes32[] memory _genericArray;
    assembly {
      _genericArray := _input
    }
    return TightCoder.encode(_genericArray, 32, 0);
  }

  function encode(int8[] memory _input) internal pure returns (bytes memory) {
    bytes32[] memory _genericArray;
    assembly {
      _genericArray := _input
    }
    return TightCoder.encode(_genericArray, 1, 248);
  }

  function encode(int16[] memory _input) internal pure returns (bytes memory) {
    bytes32[] memory _genericArray;
    assembly {
      _genericArray := _input
    }
    return TightCoder.encode(_genericArray, 2, 240);
  }

  function encode(int24[] memory _input) internal pure returns (bytes memory) {
    bytes32[] memory _genericArray;
    assembly {
      _genericArray := _input
    }
    return TightCoder.encode(_genericArray, 3, 232);
  }

  function encode(int32[] memory _input) internal pure returns (bytes memory) {
    bytes32[] memory _genericArray;
    assembly {
      _genericArray := _input
    }
    return TightCoder.encode(_genericArray, 4, 224);
  }

  function encode(int40[] memory _input) internal pure returns (bytes memory) {
    bytes32[] memory _genericArray;
    assembly {
      _genericArray := _input
    }
    return TightCoder.encode(_genericArray, 5, 216);
  }

  function encode(int48[] memory _input) internal pure returns (bytes memory) {
    bytes32[] memory _genericArray;
    assembly {
      _genericArray := _input
    }
    return TightCoder.encode(_genericArray, 6, 208);
  }

  function encode(int56[] memory _input) internal pure returns (bytes memory) {
    bytes32[] memory _genericArray;
    assembly {
      _genericArray := _input
    }
    return TightCoder.encode(_genericArray, 7, 200);
  }

  function encode(int64[] memory _input) internal pure returns (bytes memory) {
    bytes32[] memory _genericArray;
    assembly {
      _genericArray := _input
    }
    return TightCoder.encode(_genericArray, 8, 192);
  }

  function encode(int72[] memory _input) internal pure returns (bytes memory) {
    bytes32[] memory _genericArray;
    assembly {
      _genericArray := _input
    }
    return TightCoder.encode(_genericArray, 9, 184);
  }

  function encode(int80[] memory _input) internal pure returns (bytes memory) {
    bytes32[] memory _genericArray;
    assembly {
      _genericArray := _input
    }
    return TightCoder.encode(_genericArray, 10, 176);
  }

  function encode(int88[] memory _input) internal pure returns (bytes memory) {
    bytes32[] memory _genericArray;
    assembly {
      _genericArray := _input
    }
    return TightCoder.encode(_genericArray, 11, 168);
  }

  function encode(int96[] memory _input) internal pure returns (bytes memory) {
    bytes32[] memory _genericArray;
    assembly {
      _genericArray := _input
    }
    return TightCoder.encode(_genericArray, 12, 160);
  }

  function encode(int104[] memory _input) internal pure returns (bytes memory) {
    bytes32[] memory _genericArray;
    assembly {
      _genericArray := _input
    }
    return TightCoder.encode(_genericArray, 13, 152);
  }

  function encode(int112[] memory _input) internal pure returns (bytes memory) {
    bytes32[] memory _genericArray;
    assembly {
      _genericArray := _input
    }
    return TightCoder.encode(_genericArray, 14, 144);
  }

  function encode(int120[] memory _input) internal pure returns (bytes memory) {
    bytes32[] memory _genericArray;
    assembly {
      _genericArray := _input
    }
    return TightCoder.encode(_genericArray, 15, 136);
  }

  function encode(int128[] memory _input) internal pure returns (bytes memory) {
    bytes32[] memory _genericArray;
    assembly {
      _genericArray := _input
    }
    return TightCoder.encode(_genericArray, 16, 128);
  }

  function encode(int136[] memory _input) internal pure returns (bytes memory) {
    bytes32[] memory _genericArray;
    assembly {
      _genericArray := _input
    }
    return TightCoder.encode(_genericArray, 17, 120);
  }

  function encode(int144[] memory _input) internal pure returns (bytes memory) {
    bytes32[] memory _genericArray;
    assembly {
      _genericArray := _input
    }
    return TightCoder.encode(_genericArray, 18, 112);
  }

  function encode(int152[] memory _input) internal pure returns (bytes memory) {
    bytes32[] memory _genericArray;
    assembly {
      _genericArray := _input
    }
    return TightCoder.encode(_genericArray, 19, 104);
  }

  function encode(int160[] memory _input) internal pure returns (bytes memory) {
    bytes32[] memory _genericArray;
    assembly {
      _genericArray := _input
    }
    return TightCoder.encode(_genericArray, 20, 96);
  }

  function encode(int168[] memory _input) internal pure returns (bytes memory) {
    bytes32[] memory _genericArray;
    assembly {
      _genericArray := _input
    }
    return TightCoder.encode(_genericArray, 21, 88);
  }

  function encode(int176[] memory _input) internal pure returns (bytes memory) {
    bytes32[] memory _genericArray;
    assembly {
      _genericArray := _input
    }
    return TightCoder.encode(_genericArray, 22, 80);
  }

  function encode(int184[] memory _input) internal pure returns (bytes memory) {
    bytes32[] memory _genericArray;
    assembly {
      _genericArray := _input
    }
    return TightCoder.encode(_genericArray, 23, 72);
  }

  function encode(int192[] memory _input) internal pure returns (bytes memory) {
    bytes32[] memory _genericArray;
    assembly {
      _genericArray := _input
    }
    return TightCoder.encode(_genericArray, 24, 64);
  }

  function encode(int200[] memory _input) internal pure returns (bytes memory) {
    bytes32[] memory _genericArray;
    assembly {
      _genericArray := _input
    }
    return TightCoder.encode(_genericArray, 25, 56);
  }

  function encode(int208[] memory _input) internal pure returns (bytes memory) {
    bytes32[] memory _genericArray;
    assembly {
      _genericArray := _input
    }
    return TightCoder.encode(_genericArray, 26, 48);
  }

  function encode(int216[] memory _input) internal pure returns (bytes memory) {
    bytes32[] memory _genericArray;
    assembly {
      _genericArray := _input
    }
    return TightCoder.encode(_genericArray, 27, 40);
  }

  function encode(int224[] memory _input) internal pure returns (bytes memory) {
    bytes32[] memory _genericArray;
    assembly {
      _genericArray := _input
    }
    return TightCoder.encode(_genericArray, 28, 32);
  }

  function encode(int232[] memory _input) internal pure returns (bytes memory) {
    bytes32[] memory _genericArray;
    assembly {
      _genericArray := _input
    }
    return TightCoder.encode(_genericArray, 29, 24);
  }

  function encode(int240[] memory _input) internal pure returns (bytes memory) {
    bytes32[] memory _genericArray;
    assembly {
      _genericArray := _input
    }
    return TightCoder.encode(_genericArray, 30, 16);
  }

  function encode(int248[] memory _input) internal pure returns (bytes memory) {
    bytes32[] memory _genericArray;
    assembly {
      _genericArray := _input
    }
    return TightCoder.encode(_genericArray, 31, 8);
  }

  function encode(int256[] memory _input) internal pure returns (bytes memory) {
    bytes32[] memory _genericArray;
    assembly {
      _genericArray := _input
    }
    return TightCoder.encode(_genericArray, 32, 0);
  }

  function encode(bytes1[] memory _input) internal pure returns (bytes memory) {
    bytes32[] memory _genericArray;
    assembly {
      _genericArray := _input
    }
    return TightCoder.encode(_genericArray, 1, 0);
  }

  function encode(bytes2[] memory _input) internal pure returns (bytes memory) {
    bytes32[] memory _genericArray;
    assembly {
      _genericArray := _input
    }
    return TightCoder.encode(_genericArray, 2, 0);
  }

  function encode(bytes3[] memory _input) internal pure returns (bytes memory) {
    bytes32[] memory _genericArray;
    assembly {
      _genericArray := _input
    }
    return TightCoder.encode(_genericArray, 3, 0);
  }

  function encode(bytes4[] memory _input) internal pure returns (bytes memory) {
    bytes32[] memory _genericArray;
    assembly {
      _genericArray := _input
    }
    return TightCoder.encode(_genericArray, 4, 0);
  }

  function encode(bytes5[] memory _input) internal pure returns (bytes memory) {
    bytes32[] memory _genericArray;
    assembly {
      _genericArray := _input
    }
    return TightCoder.encode(_genericArray, 5, 0);
  }

  function encode(bytes6[] memory _input) internal pure returns (bytes memory) {
    bytes32[] memory _genericArray;
    assembly {
      _genericArray := _input
    }
    return TightCoder.encode(_genericArray, 6, 0);
  }

  function encode(bytes7[] memory _input) internal pure returns (bytes memory) {
    bytes32[] memory _genericArray;
    assembly {
      _genericArray := _input
    }
    return TightCoder.encode(_genericArray, 7, 0);
  }

  function encode(bytes8[] memory _input) internal pure returns (bytes memory) {
    bytes32[] memory _genericArray;
    assembly {
      _genericArray := _input
    }
    return TightCoder.encode(_genericArray, 8, 0);
  }

  function encode(bytes9[] memory _input) internal pure returns (bytes memory) {
    bytes32[] memory _genericArray;
    assembly {
      _genericArray := _input
    }
    return TightCoder.encode(_genericArray, 9, 0);
  }

  function encode(bytes10[] memory _input) internal pure returns (bytes memory) {
    bytes32[] memory _genericArray;
    assembly {
      _genericArray := _input
    }
    return TightCoder.encode(_genericArray, 10, 0);
  }

  function encode(bytes11[] memory _input) internal pure returns (bytes memory) {
    bytes32[] memory _genericArray;
    assembly {
      _genericArray := _input
    }
    return TightCoder.encode(_genericArray, 11, 0);
  }

  function encode(bytes12[] memory _input) internal pure returns (bytes memory) {
    bytes32[] memory _genericArray;
    assembly {
      _genericArray := _input
    }
    return TightCoder.encode(_genericArray, 12, 0);
  }

  function encode(bytes13[] memory _input) internal pure returns (bytes memory) {
    bytes32[] memory _genericArray;
    assembly {
      _genericArray := _input
    }
    return TightCoder.encode(_genericArray, 13, 0);
  }

  function encode(bytes14[] memory _input) internal pure returns (bytes memory) {
    bytes32[] memory _genericArray;
    assembly {
      _genericArray := _input
    }
    return TightCoder.encode(_genericArray, 14, 0);
  }

  function encode(bytes15[] memory _input) internal pure returns (bytes memory) {
    bytes32[] memory _genericArray;
    assembly {
      _genericArray := _input
    }
    return TightCoder.encode(_genericArray, 15, 0);
  }

  function encode(bytes16[] memory _input) internal pure returns (bytes memory) {
    bytes32[] memory _genericArray;
    assembly {
      _genericArray := _input
    }
    return TightCoder.encode(_genericArray, 16, 0);
  }

  function encode(bytes17[] memory _input) internal pure returns (bytes memory) {
    bytes32[] memory _genericArray;
    assembly {
      _genericArray := _input
    }
    return TightCoder.encode(_genericArray, 17, 0);
  }

  function encode(bytes18[] memory _input) internal pure returns (bytes memory) {
    bytes32[] memory _genericArray;
    assembly {
      _genericArray := _input
    }
    return TightCoder.encode(_genericArray, 18, 0);
  }

  function encode(bytes19[] memory _input) internal pure returns (bytes memory) {
    bytes32[] memory _genericArray;
    assembly {
      _genericArray := _input
    }
    return TightCoder.encode(_genericArray, 19, 0);
  }

  function encode(bytes20[] memory _input) internal pure returns (bytes memory) {
    bytes32[] memory _genericArray;
    assembly {
      _genericArray := _input
    }
    return TightCoder.encode(_genericArray, 20, 0);
  }

  function encode(bytes21[] memory _input) internal pure returns (bytes memory) {
    bytes32[] memory _genericArray;
    assembly {
      _genericArray := _input
    }
    return TightCoder.encode(_genericArray, 21, 0);
  }

  function encode(bytes22[] memory _input) internal pure returns (bytes memory) {
    bytes32[] memory _genericArray;
    assembly {
      _genericArray := _input
    }
    return TightCoder.encode(_genericArray, 22, 0);
  }

  function encode(bytes23[] memory _input) internal pure returns (bytes memory) {
    bytes32[] memory _genericArray;
    assembly {
      _genericArray := _input
    }
    return TightCoder.encode(_genericArray, 23, 0);
  }

  function encode(bytes24[] memory _input) internal pure returns (bytes memory) {
    bytes32[] memory _genericArray;
    assembly {
      _genericArray := _input
    }
    return TightCoder.encode(_genericArray, 24, 0);
  }

  function encode(bytes25[] memory _input) internal pure returns (bytes memory) {
    bytes32[] memory _genericArray;
    assembly {
      _genericArray := _input
    }
    return TightCoder.encode(_genericArray, 25, 0);
  }

  function encode(bytes26[] memory _input) internal pure returns (bytes memory) {
    bytes32[] memory _genericArray;
    assembly {
      _genericArray := _input
    }
    return TightCoder.encode(_genericArray, 26, 0);
  }

  function encode(bytes27[] memory _input) internal pure returns (bytes memory) {
    bytes32[] memory _genericArray;
    assembly {
      _genericArray := _input
    }
    return TightCoder.encode(_genericArray, 27, 0);
  }

  function encode(bytes28[] memory _input) internal pure returns (bytes memory) {
    bytes32[] memory _genericArray;
    assembly {
      _genericArray := _input
    }
    return TightCoder.encode(_genericArray, 28, 0);
  }

  function encode(bytes29[] memory _input) internal pure returns (bytes memory) {
    bytes32[] memory _genericArray;
    assembly {
      _genericArray := _input
    }
    return TightCoder.encode(_genericArray, 29, 0);
  }

  function encode(bytes30[] memory _input) internal pure returns (bytes memory) {
    bytes32[] memory _genericArray;
    assembly {
      _genericArray := _input
    }
    return TightCoder.encode(_genericArray, 30, 0);
  }

  function encode(bytes31[] memory _input) internal pure returns (bytes memory) {
    bytes32[] memory _genericArray;
    assembly {
      _genericArray := _input
    }
    return TightCoder.encode(_genericArray, 31, 0);
  }

  function encode(bytes32[] memory _input) internal pure returns (bytes memory) {
    bytes32[] memory _genericArray;
    assembly {
      _genericArray := _input
    }
    return TightCoder.encode(_genericArray, 32, 0);
  }

  function encode(bool[] memory _input) internal pure returns (bytes memory) {
    bytes32[] memory _genericArray;
    assembly {
      _genericArray := _input
    }
    return TightCoder.encode(_genericArray, 1, 248);
  }

  function encode(address[] memory _input) internal pure returns (bytes memory) {
    bytes32[] memory _genericArray;
    assembly {
      _genericArray := _input
    }
    return TightCoder.encode(_genericArray, 20, 96);
  }
}
